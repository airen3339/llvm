// Code generated by "stringer -linecomment -type AtomicOrdering"; DO NOT EDIT.

package enum

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[AtomicOrderingNone-0]
	_ = x[AtomicOrderingUnordered-1]
	_ = x[AtomicOrderingMonotonic-2]
	_ = x[AtomicOrderingAcquire-4]
	_ = x[AtomicOrderingRelease-5]
	_ = x[AtomicOrderingAcquireRelease-6]
	_ = x[AtomicOrderingSequentiallyConsistent-7]
}

const (
	_AtomicOrdering_name_0 = "noneunorderedmonotonic"
	_AtomicOrdering_name_1 = "acquirereleaseacq_relseq_cst"
)

var (
	_AtomicOrdering_index_0 = [...]uint8{0, 4, 13, 22}
	_AtomicOrdering_index_1 = [...]uint8{0, 7, 14, 21, 28}
)

func (i AtomicOrdering) String() string {
	switch {
	case i <= 2:
		return _AtomicOrdering_name_0[_AtomicOrdering_index_0[i]:_AtomicOrdering_index_0[i+1]]
	case 4 <= i && i <= 7:
		i -= 4
		return _AtomicOrdering_name_1[_AtomicOrdering_index_1[i]:_AtomicOrdering_index_1[i+1]]
	default:
		return "AtomicOrdering(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
