package constant_test

import (
	"testing"

	"github.com/llir/llvm/ir/constant"
	"github.com/llir/llvm/ir/types"
)

func TestNewFloatFromStringForPPCFP128(t *testing.T) {
	testCases := []string{
		"0xM00000000000000000000000000000000",
		"0xM3DF00000000000000000000000000000",
		"0xM3FF00000000000000000000000000000",
		"0xM40000000000000000000000000000000",
		"0xM400C0000000000300000000010000000",
		"0xM400F000000000000BCB0000000000000",
		"0xM403B0000000000000000000000000000",
		"0xM405EDA5E353F7CEE0000000000000000",
		"0xM4093B400000000000000000000000000",
		"0xM41F00000000000000000000000000000",
		"0xM4D436562A0416DE00000000000000000",
		"0xM80000000000000000000000000000000",
		"0xM818F2887B9295809800000000032D000",
		"0xMC00547AE147AE1483CA47AE147AE147A",
	}
	for _, literal := range testCases {
		_, err := constant.NewFloatFromString(types.PPC_FP128, literal)
		if err != nil {
			t.Errorf("failed at new the float from string: %s", err)
			continue
		}
	}
}

func TestNewFloatFromStringForFP128(t *testing.T) {
	testCases := []string{
		"0xL0",
		"0xL00000000000000000000000000000000",
		"0xL00000000000000000001000000000000",
		"0xL00000000000000003FFF000000000000",
		"0xL00000000000000003fff000001000000",
		"0xL00000000000000003fff000002000000",
		"0xL00000000000000004000000000000000",
		"0xL00000000000000004001400000000000",
		"0xL00000000000000004004C00000000000",
		"0xL00000000000000004201000000000000",
		"0xL00000000000000005001000000000000",
		"0xL00000000000000007FFF000000000000",
		"0xL00000000000000007FFF800000000000",
		"0xL00000000000000008000000000000000",
		"0xL00000000000000013fff000000000000",
		"0xL00000000000000018000000000000000",
		"0xL000fffff00000000000fffff00000000",
		"0xL00ff00ff00ff00ff00ff00ff00ff00ff",
		"0xL01",
		"0xL08000000000000003fff000000000000",
		"0xL300000000000000040089CA8F5C28F5C",
		"0xL5000000000000000400E0C26324C8366",
		"0xL8000000000000000400A24E2E147AE14",
		"0xL999999999999999A3FFB999999999999",
		"0xLEB851EB851EB851F400091EB851EB851",
		"0xLF000000000000000400808AB851EB851",
		"0xLf8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8",
	}
	for _, literal := range testCases {
		_, err := constant.NewFloatFromString(types.FP128, literal)
		if err != nil {
			t.Errorf("failed at new the float from string: %s", err)
			continue
		}
	}
}
