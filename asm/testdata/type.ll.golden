%t2 = type i32 (i32)

%t3 = type i32

%t4 = type double

%t6 = type i32*

%t7 = type i32 addrspace(2)*

%t8 = type <2 x i32>

%t9 = type label

%t11 = type metadata

%t12 = type [2 x i32]

%t13 = type {}

%t14 = type { i32, double }

%t15 = type {}

%t16 = type { i32, i8, i32 }

%t17 = type i32

declare void @f1()

declare i1 @f2()

declare i2 @f3()

declare i4 @f4()

declare i8 @f5()

declare i16 @f6()

declare i32 @f7()

declare i64 @f8()

declare i128 @f9()

declare half @f10()

declare float @f11()

declare double @f12()

declare fp128 @f13()

declare x86_fp80 @f14()

declare ppc_fp128 @f15()

declare i8* @f16()

declare <2 x i8> @f17()

define void @f18() {
; <label>:0
	br label %foo
foo:
	ret void
}

declare void @f19(metadata %x)

declare [2 x i32] @f20()

declare {} @f21()

declare { i32 } @f22()

declare { i32, i8, [2 x i32], { i32, <2 x i8> } } @f23()

declare {} @f24()

declare { i32, i8, i32 } @f25()

declare %t3 @f26()

declare %t4 @f27()

declare %t6 @f29()

declare %t7 @f30()

declare %t8 @f31()

declare void @f33(%t11 %x)

declare %t12 @f34()

declare %t13 @f35()

declare %t14 @f36()

declare %t15 @f37()

declare %t16 @f38()

declare %t17 @f39()
