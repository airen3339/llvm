# API design considerations

## Merge ir and ir/constant

### Pro

1. `Func` and `Block` of `BlockAddress` would have correct types (`*ir.Function`
   and `*ir.BasicBlock`, respectively).

   - This is not possible when `ir` and `ir/constant` are split as
     `ir.IndirectBr.Addr` is of type `*constant.BlockAddress`, and
     `constant.BlockAddress.Func` is of type `*ir.Function`, thus creating an
     import cycle.

2. The `IsConstant` dummy method could be unexported.

### Con

1. Name collisions between `ir.Add` and `constant.Add`. Could be resolved by
   renaming `constant.Add` `ir.AddExpr`.

2. The GoDoc becomes more difficult to navigate.

3. Without renaming types, e.g. `BlockAddress` of package `constant`, the
   constant property would be lost in the name, if simply moving these type
   definitions to package ir; e.g. `ir.BlockAddress`.

### Decision

Keep package `ir` and `ir/constant` separate.
