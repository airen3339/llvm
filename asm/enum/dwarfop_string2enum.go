// Code generated by "string2enum -linecomment -type DwarfOp ../../ir/enum"; DO NOT EDIT.

package enum

import (
	"fmt"

	"github.com/llir/llvm/ir/enum"
)

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the string2enum command to generate them again.
	var x [1]struct{}
	_ = x[enum.DwarfOpAddr-3]
	_ = x[enum.DwarfOpDeref-6]
	_ = x[enum.DwarfOpConst1u-8]
	_ = x[enum.DwarfOpConst1s-9]
	_ = x[enum.DwarfOpConst2u-10]
	_ = x[enum.DwarfOpConst2s-11]
	_ = x[enum.DwarfOpConst4u-12]
	_ = x[enum.DwarfOpConst4s-13]
	_ = x[enum.DwarfOpConst8u-14]
	_ = x[enum.DwarfOpConst8s-15]
	_ = x[enum.DwarfOpConstu-16]
	_ = x[enum.DwarfOpConsts-17]
	_ = x[enum.DwarfOpDup-18]
	_ = x[enum.DwarfOpDrop-19]
	_ = x[enum.DwarfOpOver-20]
	_ = x[enum.DwarfOpPick-21]
	_ = x[enum.DwarfOpSwap-22]
	_ = x[enum.DwarfOpRot-23]
	_ = x[enum.DwarfOpXderef-24]
	_ = x[enum.DwarfOpAbs-25]
	_ = x[enum.DwarfOpAnd-26]
	_ = x[enum.DwarfOpDiv-27]
	_ = x[enum.DwarfOpMinus-28]
	_ = x[enum.DwarfOpMod-29]
	_ = x[enum.DwarfOpMul-30]
	_ = x[enum.DwarfOpNeg-31]
	_ = x[enum.DwarfOpNot-32]
	_ = x[enum.DwarfOpOr-33]
	_ = x[enum.DwarfOpPlus-34]
	_ = x[enum.DwarfOpPlusUconst-35]
	_ = x[enum.DwarfOpShl-36]
	_ = x[enum.DwarfOpShr-37]
	_ = x[enum.DwarfOpShra-38]
	_ = x[enum.DwarfOpXor-39]
	_ = x[enum.DwarfOpBra-40]
	_ = x[enum.DwarfOpEq-41]
	_ = x[enum.DwarfOpGe-42]
	_ = x[enum.DwarfOpGt-43]
	_ = x[enum.DwarfOpLe-44]
	_ = x[enum.DwarfOpLt-45]
	_ = x[enum.DwarfOpNe-46]
	_ = x[enum.DwarfOpSkip-47]
	_ = x[enum.DwarfOpLit0-48]
	_ = x[enum.DwarfOpLit1-49]
	_ = x[enum.DwarfOpLit2-50]
	_ = x[enum.DwarfOpLit3-51]
	_ = x[enum.DwarfOpLit4-52]
	_ = x[enum.DwarfOpLit5-53]
	_ = x[enum.DwarfOpLit6-54]
	_ = x[enum.DwarfOpLit7-55]
	_ = x[enum.DwarfOpLit8-56]
	_ = x[enum.DwarfOpLit9-57]
	_ = x[enum.DwarfOpLit10-58]
	_ = x[enum.DwarfOpLit11-59]
	_ = x[enum.DwarfOpLit12-60]
	_ = x[enum.DwarfOpLit13-61]
	_ = x[enum.DwarfOpLit14-62]
	_ = x[enum.DwarfOpLit15-63]
	_ = x[enum.DwarfOpLit16-64]
	_ = x[enum.DwarfOpLit17-65]
	_ = x[enum.DwarfOpLit18-66]
	_ = x[enum.DwarfOpLit19-67]
	_ = x[enum.DwarfOpLit20-68]
	_ = x[enum.DwarfOpLit21-69]
	_ = x[enum.DwarfOpLit22-70]
	_ = x[enum.DwarfOpLit23-71]
	_ = x[enum.DwarfOpLit24-72]
	_ = x[enum.DwarfOpLit25-73]
	_ = x[enum.DwarfOpLit26-74]
	_ = x[enum.DwarfOpLit27-75]
	_ = x[enum.DwarfOpLit28-76]
	_ = x[enum.DwarfOpLit29-77]
	_ = x[enum.DwarfOpLit30-78]
	_ = x[enum.DwarfOpLit31-79]
	_ = x[enum.DwarfOpReg0-80]
	_ = x[enum.DwarfOpReg1-81]
	_ = x[enum.DwarfOpReg2-82]
	_ = x[enum.DwarfOpReg3-83]
	_ = x[enum.DwarfOpReg4-84]
	_ = x[enum.DwarfOpReg5-85]
	_ = x[enum.DwarfOpReg6-86]
	_ = x[enum.DwarfOpReg7-87]
	_ = x[enum.DwarfOpReg8-88]
	_ = x[enum.DwarfOpReg9-89]
	_ = x[enum.DwarfOpReg10-90]
	_ = x[enum.DwarfOpReg11-91]
	_ = x[enum.DwarfOpReg12-92]
	_ = x[enum.DwarfOpReg13-93]
	_ = x[enum.DwarfOpReg14-94]
	_ = x[enum.DwarfOpReg15-95]
	_ = x[enum.DwarfOpReg16-96]
	_ = x[enum.DwarfOpReg17-97]
	_ = x[enum.DwarfOpReg18-98]
	_ = x[enum.DwarfOpReg19-99]
	_ = x[enum.DwarfOpReg20-100]
	_ = x[enum.DwarfOpReg21-101]
	_ = x[enum.DwarfOpReg22-102]
	_ = x[enum.DwarfOpReg23-103]
	_ = x[enum.DwarfOpReg24-104]
	_ = x[enum.DwarfOpReg25-105]
	_ = x[enum.DwarfOpReg26-106]
	_ = x[enum.DwarfOpReg27-107]
	_ = x[enum.DwarfOpReg28-108]
	_ = x[enum.DwarfOpReg29-109]
	_ = x[enum.DwarfOpReg30-110]
	_ = x[enum.DwarfOpReg31-111]
	_ = x[enum.DwarfOpBreg0-112]
	_ = x[enum.DwarfOpBreg1-113]
	_ = x[enum.DwarfOpBreg2-114]
	_ = x[enum.DwarfOpBreg3-115]
	_ = x[enum.DwarfOpBreg4-116]
	_ = x[enum.DwarfOpBreg5-117]
	_ = x[enum.DwarfOpBreg6-118]
	_ = x[enum.DwarfOpBreg7-119]
	_ = x[enum.DwarfOpBreg8-120]
	_ = x[enum.DwarfOpBreg9-121]
	_ = x[enum.DwarfOpBreg10-122]
	_ = x[enum.DwarfOpBreg11-123]
	_ = x[enum.DwarfOpBreg12-124]
	_ = x[enum.DwarfOpBreg13-125]
	_ = x[enum.DwarfOpBreg14-126]
	_ = x[enum.DwarfOpBreg15-127]
	_ = x[enum.DwarfOpBreg16-128]
	_ = x[enum.DwarfOpBreg17-129]
	_ = x[enum.DwarfOpBreg18-130]
	_ = x[enum.DwarfOpBreg19-131]
	_ = x[enum.DwarfOpBreg20-132]
	_ = x[enum.DwarfOpBreg21-133]
	_ = x[enum.DwarfOpBreg22-134]
	_ = x[enum.DwarfOpBreg23-135]
	_ = x[enum.DwarfOpBreg24-136]
	_ = x[enum.DwarfOpBreg25-137]
	_ = x[enum.DwarfOpBreg26-138]
	_ = x[enum.DwarfOpBreg27-139]
	_ = x[enum.DwarfOpBreg28-140]
	_ = x[enum.DwarfOpBreg29-141]
	_ = x[enum.DwarfOpBreg30-142]
	_ = x[enum.DwarfOpBreg31-143]
	_ = x[enum.DwarfOpRegx-144]
	_ = x[enum.DwarfOpFbreg-145]
	_ = x[enum.DwarfOpBregx-146]
	_ = x[enum.DwarfOpPiece-147]
	_ = x[enum.DwarfOpDerefSize-148]
	_ = x[enum.DwarfOpXderefSize-149]
	_ = x[enum.DwarfOpNop-150]
	_ = x[enum.DwarfOpPushObjectAddress-151]
	_ = x[enum.DwarfOpCall2-152]
	_ = x[enum.DwarfOpCall4-153]
	_ = x[enum.DwarfOpCallRef-154]
	_ = x[enum.DwarfOpFormTLSAddress-155]
	_ = x[enum.DwarfOpCallFrameCFA-156]
	_ = x[enum.DwarfOpBitPiece-157]
	_ = x[enum.DwarfOpImplicitValue-158]
	_ = x[enum.DwarfOpStackValue-159]
	_ = x[enum.DwarfOpImplicitPointer-160]
	_ = x[enum.DwarfOpAddrx-161]
	_ = x[enum.DwarfOpConstx-162]
	_ = x[enum.DwarfOpEntryValue-163]
	_ = x[enum.DwarfOpConstType-164]
	_ = x[enum.DwarfOpRegvalType-165]
	_ = x[enum.DwarfOpDerefType-166]
	_ = x[enum.DwarfOpXderefType-167]
	_ = x[enum.DwarfOpConvert-168]
	_ = x[enum.DwarfOpReinterpret-169]
	_ = x[enum.DwarfOpGNUPushTLSAddress-224]
	_ = x[enum.DwarfOpHPIsValue-225]
	_ = x[enum.DwarfOpHPFltConst4-226]
	_ = x[enum.DwarfOpHPFltConst8-227]
	_ = x[enum.DwarfOpHPModRange-228]
	_ = x[enum.DwarfOpHPUnmodRange-229]
	_ = x[enum.DwarfOpHPTLS-230]
	_ = x[enum.DwarfOpIntelBitPiece-232]
	_ = x[enum.DwarfOpWASMLocation-237]
	_ = x[enum.DwarfOpWASMLocationInt-238]
	_ = x[enum.DwarfOpAppleUninit-240]
	_ = x[enum.DwarfOpGNUEntryValue-243]
	_ = x[enum.DwarfOpPGIOmpThreadNum-248]
	_ = x[enum.DwarfOpGNUAddrIndex-251]
	_ = x[enum.DwarfOpGNUConstIndex-252]
	_ = x[enum.DwarfOpLLVMFragment-4096]
	_ = x[enum.DwarfOpLLVMConvert-4097]
	_ = x[enum.DwarfOpLLVMTagOffset-4098]
	_ = x[enum.DwarfOpLLVMEntryValue-4099]
	_ = x[enum.DwarfOpLLVMImplicitPointer-4100]
	_ = x[enum.DwarfOpLLVMArg-4101]
}

const _DwarfOp_name = "DW_OP_addrDW_OP_derefDW_OP_const1uDW_OP_const1sDW_OP_const2uDW_OP_const2sDW_OP_const4uDW_OP_const4sDW_OP_const8uDW_OP_const8sDW_OP_constuDW_OP_constsDW_OP_dupDW_OP_dropDW_OP_overDW_OP_pickDW_OP_swapDW_OP_rotDW_OP_xderefDW_OP_absDW_OP_andDW_OP_divDW_OP_minusDW_OP_modDW_OP_mulDW_OP_negDW_OP_notDW_OP_orDW_OP_plusDW_OP_plus_uconstDW_OP_shlDW_OP_shrDW_OP_shraDW_OP_xorDW_OP_braDW_OP_eqDW_OP_geDW_OP_gtDW_OP_leDW_OP_ltDW_OP_neDW_OP_skipDW_OP_lit0DW_OP_lit1DW_OP_lit2DW_OP_lit3DW_OP_lit4DW_OP_lit5DW_OP_lit6DW_OP_lit7DW_OP_lit8DW_OP_lit9DW_OP_lit10DW_OP_lit11DW_OP_lit12DW_OP_lit13DW_OP_lit14DW_OP_lit15DW_OP_lit16DW_OP_lit17DW_OP_lit18DW_OP_lit19DW_OP_lit20DW_OP_lit21DW_OP_lit22DW_OP_lit23DW_OP_lit24DW_OP_lit25DW_OP_lit26DW_OP_lit27DW_OP_lit28DW_OP_lit29DW_OP_lit30DW_OP_lit31DW_OP_reg0DW_OP_reg1DW_OP_reg2DW_OP_reg3DW_OP_reg4DW_OP_reg5DW_OP_reg6DW_OP_reg7DW_OP_reg8DW_OP_reg9DW_OP_reg10DW_OP_reg11DW_OP_reg12DW_OP_reg13DW_OP_reg14DW_OP_reg15DW_OP_reg16DW_OP_reg17DW_OP_reg18DW_OP_reg19DW_OP_reg20DW_OP_reg21DW_OP_reg22DW_OP_reg23DW_OP_reg24DW_OP_reg25DW_OP_reg26DW_OP_reg27DW_OP_reg28DW_OP_reg29DW_OP_reg30DW_OP_reg31DW_OP_breg0DW_OP_breg1DW_OP_breg2DW_OP_breg3DW_OP_breg4DW_OP_breg5DW_OP_breg6DW_OP_breg7DW_OP_breg8DW_OP_breg9DW_OP_breg10DW_OP_breg11DW_OP_breg12DW_OP_breg13DW_OP_breg14DW_OP_breg15DW_OP_breg16DW_OP_breg17DW_OP_breg18DW_OP_breg19DW_OP_breg20DW_OP_breg21DW_OP_breg22DW_OP_breg23DW_OP_breg24DW_OP_breg25DW_OP_breg26DW_OP_breg27DW_OP_breg28DW_OP_breg29DW_OP_breg30DW_OP_breg31DW_OP_regxDW_OP_fbregDW_OP_bregxDW_OP_pieceDW_OP_deref_sizeDW_OP_xderef_sizeDW_OP_nopDW_OP_push_object_addressDW_OP_call2DW_OP_call4DW_OP_call_refDW_OP_form_tls_addressDW_OP_call_frame_cfaDW_OP_bit_pieceDW_OP_implicit_valueDW_OP_stack_valueDW_OP_implicit_pointerDW_OP_addrxDW_OP_constxDW_OP_entry_valueDW_OP_const_typeDW_OP_regval_typeDW_OP_deref_typeDW_OP_xderef_typeDW_OP_convertDW_OP_reinterpretDW_OP_GNU_push_tls_addressDW_OP_HP_is_valueDW_OP_HP_fltconst4DW_OP_HP_fltconst8DW_OP_HP_mod_rangeDW_OP_HP_unmod_rangeDW_OP_HP_tlsDW_OP_INTEL_bit_pieceDW_OP_WASM_locationDW_OP_WASM_location_intDW_OP_APPLE_uninitDW_OP_GNU_entry_valueDW_OP_PGI_omp_thread_numDW_OP_GNU_addr_indexDW_OP_GNU_const_indexDW_OP_LLVM_fragmentDW_OP_LLVM_convertDW_OP_LLVM_tag_offsetDW_OP_LLVM_entry_valueDW_OP_LLVM_implicit_pointerDW_OP_LLVM_arg"

var _DwarfOp_map = map[enum.DwarfOp]string{
	3:    _DwarfOp_name[0:10],
	6:    _DwarfOp_name[10:21],
	8:    _DwarfOp_name[21:34],
	9:    _DwarfOp_name[34:47],
	10:   _DwarfOp_name[47:60],
	11:   _DwarfOp_name[60:73],
	12:   _DwarfOp_name[73:86],
	13:   _DwarfOp_name[86:99],
	14:   _DwarfOp_name[99:112],
	15:   _DwarfOp_name[112:125],
	16:   _DwarfOp_name[125:137],
	17:   _DwarfOp_name[137:149],
	18:   _DwarfOp_name[149:158],
	19:   _DwarfOp_name[158:168],
	20:   _DwarfOp_name[168:178],
	21:   _DwarfOp_name[178:188],
	22:   _DwarfOp_name[188:198],
	23:   _DwarfOp_name[198:207],
	24:   _DwarfOp_name[207:219],
	25:   _DwarfOp_name[219:228],
	26:   _DwarfOp_name[228:237],
	27:   _DwarfOp_name[237:246],
	28:   _DwarfOp_name[246:257],
	29:   _DwarfOp_name[257:266],
	30:   _DwarfOp_name[266:275],
	31:   _DwarfOp_name[275:284],
	32:   _DwarfOp_name[284:293],
	33:   _DwarfOp_name[293:301],
	34:   _DwarfOp_name[301:311],
	35:   _DwarfOp_name[311:328],
	36:   _DwarfOp_name[328:337],
	37:   _DwarfOp_name[337:346],
	38:   _DwarfOp_name[346:356],
	39:   _DwarfOp_name[356:365],
	40:   _DwarfOp_name[365:374],
	41:   _DwarfOp_name[374:382],
	42:   _DwarfOp_name[382:390],
	43:   _DwarfOp_name[390:398],
	44:   _DwarfOp_name[398:406],
	45:   _DwarfOp_name[406:414],
	46:   _DwarfOp_name[414:422],
	47:   _DwarfOp_name[422:432],
	48:   _DwarfOp_name[432:442],
	49:   _DwarfOp_name[442:452],
	50:   _DwarfOp_name[452:462],
	51:   _DwarfOp_name[462:472],
	52:   _DwarfOp_name[472:482],
	53:   _DwarfOp_name[482:492],
	54:   _DwarfOp_name[492:502],
	55:   _DwarfOp_name[502:512],
	56:   _DwarfOp_name[512:522],
	57:   _DwarfOp_name[522:532],
	58:   _DwarfOp_name[532:543],
	59:   _DwarfOp_name[543:554],
	60:   _DwarfOp_name[554:565],
	61:   _DwarfOp_name[565:576],
	62:   _DwarfOp_name[576:587],
	63:   _DwarfOp_name[587:598],
	64:   _DwarfOp_name[598:609],
	65:   _DwarfOp_name[609:620],
	66:   _DwarfOp_name[620:631],
	67:   _DwarfOp_name[631:642],
	68:   _DwarfOp_name[642:653],
	69:   _DwarfOp_name[653:664],
	70:   _DwarfOp_name[664:675],
	71:   _DwarfOp_name[675:686],
	72:   _DwarfOp_name[686:697],
	73:   _DwarfOp_name[697:708],
	74:   _DwarfOp_name[708:719],
	75:   _DwarfOp_name[719:730],
	76:   _DwarfOp_name[730:741],
	77:   _DwarfOp_name[741:752],
	78:   _DwarfOp_name[752:763],
	79:   _DwarfOp_name[763:774],
	80:   _DwarfOp_name[774:784],
	81:   _DwarfOp_name[784:794],
	82:   _DwarfOp_name[794:804],
	83:   _DwarfOp_name[804:814],
	84:   _DwarfOp_name[814:824],
	85:   _DwarfOp_name[824:834],
	86:   _DwarfOp_name[834:844],
	87:   _DwarfOp_name[844:854],
	88:   _DwarfOp_name[854:864],
	89:   _DwarfOp_name[864:874],
	90:   _DwarfOp_name[874:885],
	91:   _DwarfOp_name[885:896],
	92:   _DwarfOp_name[896:907],
	93:   _DwarfOp_name[907:918],
	94:   _DwarfOp_name[918:929],
	95:   _DwarfOp_name[929:940],
	96:   _DwarfOp_name[940:951],
	97:   _DwarfOp_name[951:962],
	98:   _DwarfOp_name[962:973],
	99:   _DwarfOp_name[973:984],
	100:  _DwarfOp_name[984:995],
	101:  _DwarfOp_name[995:1006],
	102:  _DwarfOp_name[1006:1017],
	103:  _DwarfOp_name[1017:1028],
	104:  _DwarfOp_name[1028:1039],
	105:  _DwarfOp_name[1039:1050],
	106:  _DwarfOp_name[1050:1061],
	107:  _DwarfOp_name[1061:1072],
	108:  _DwarfOp_name[1072:1083],
	109:  _DwarfOp_name[1083:1094],
	110:  _DwarfOp_name[1094:1105],
	111:  _DwarfOp_name[1105:1116],
	112:  _DwarfOp_name[1116:1127],
	113:  _DwarfOp_name[1127:1138],
	114:  _DwarfOp_name[1138:1149],
	115:  _DwarfOp_name[1149:1160],
	116:  _DwarfOp_name[1160:1171],
	117:  _DwarfOp_name[1171:1182],
	118:  _DwarfOp_name[1182:1193],
	119:  _DwarfOp_name[1193:1204],
	120:  _DwarfOp_name[1204:1215],
	121:  _DwarfOp_name[1215:1226],
	122:  _DwarfOp_name[1226:1238],
	123:  _DwarfOp_name[1238:1250],
	124:  _DwarfOp_name[1250:1262],
	125:  _DwarfOp_name[1262:1274],
	126:  _DwarfOp_name[1274:1286],
	127:  _DwarfOp_name[1286:1298],
	128:  _DwarfOp_name[1298:1310],
	129:  _DwarfOp_name[1310:1322],
	130:  _DwarfOp_name[1322:1334],
	131:  _DwarfOp_name[1334:1346],
	132:  _DwarfOp_name[1346:1358],
	133:  _DwarfOp_name[1358:1370],
	134:  _DwarfOp_name[1370:1382],
	135:  _DwarfOp_name[1382:1394],
	136:  _DwarfOp_name[1394:1406],
	137:  _DwarfOp_name[1406:1418],
	138:  _DwarfOp_name[1418:1430],
	139:  _DwarfOp_name[1430:1442],
	140:  _DwarfOp_name[1442:1454],
	141:  _DwarfOp_name[1454:1466],
	142:  _DwarfOp_name[1466:1478],
	143:  _DwarfOp_name[1478:1490],
	144:  _DwarfOp_name[1490:1500],
	145:  _DwarfOp_name[1500:1511],
	146:  _DwarfOp_name[1511:1522],
	147:  _DwarfOp_name[1522:1533],
	148:  _DwarfOp_name[1533:1549],
	149:  _DwarfOp_name[1549:1566],
	150:  _DwarfOp_name[1566:1575],
	151:  _DwarfOp_name[1575:1600],
	152:  _DwarfOp_name[1600:1611],
	153:  _DwarfOp_name[1611:1622],
	154:  _DwarfOp_name[1622:1636],
	155:  _DwarfOp_name[1636:1658],
	156:  _DwarfOp_name[1658:1678],
	157:  _DwarfOp_name[1678:1693],
	158:  _DwarfOp_name[1693:1713],
	159:  _DwarfOp_name[1713:1730],
	160:  _DwarfOp_name[1730:1752],
	161:  _DwarfOp_name[1752:1763],
	162:  _DwarfOp_name[1763:1775],
	163:  _DwarfOp_name[1775:1792],
	164:  _DwarfOp_name[1792:1808],
	165:  _DwarfOp_name[1808:1825],
	166:  _DwarfOp_name[1825:1841],
	167:  _DwarfOp_name[1841:1858],
	168:  _DwarfOp_name[1858:1871],
	169:  _DwarfOp_name[1871:1888],
	224:  _DwarfOp_name[1888:1914],
	225:  _DwarfOp_name[1914:1931],
	226:  _DwarfOp_name[1931:1949],
	227:  _DwarfOp_name[1949:1967],
	228:  _DwarfOp_name[1967:1985],
	229:  _DwarfOp_name[1985:2005],
	230:  _DwarfOp_name[2005:2017],
	232:  _DwarfOp_name[2017:2038],
	237:  _DwarfOp_name[2038:2057],
	238:  _DwarfOp_name[2057:2080],
	240:  _DwarfOp_name[2080:2098],
	243:  _DwarfOp_name[2098:2119],
	248:  _DwarfOp_name[2119:2143],
	251:  _DwarfOp_name[2143:2163],
	252:  _DwarfOp_name[2163:2184],
	4096: _DwarfOp_name[2184:2203],
	4097: _DwarfOp_name[2203:2221],
	4098: _DwarfOp_name[2221:2242],
	4099: _DwarfOp_name[2242:2264],
	4100: _DwarfOp_name[2264:2291],
	4101: _DwarfOp_name[2291:2305],
}

// DwarfOpFromString returns the DwarfOp enum corresponding to s.
func DwarfOpFromString(s string) enum.DwarfOp {
	for key, val := range _DwarfOp_map {
		if s == val {
			return key
		}
	}
	panic(fmt.Errorf("unable to locate DwarfOp enum corresponding to %q", s))
}

func _(s string) {
	// Check for duplicate string values in type "DwarfOp".
	switch s {
	// 3
	case "DW_OP_addr":
	// 6
	case "DW_OP_deref":
	// 8
	case "DW_OP_const1u":
	// 9
	case "DW_OP_const1s":
	// 10
	case "DW_OP_const2u":
	// 11
	case "DW_OP_const2s":
	// 12
	case "DW_OP_const4u":
	// 13
	case "DW_OP_const4s":
	// 14
	case "DW_OP_const8u":
	// 15
	case "DW_OP_const8s":
	// 16
	case "DW_OP_constu":
	// 17
	case "DW_OP_consts":
	// 18
	case "DW_OP_dup":
	// 19
	case "DW_OP_drop":
	// 20
	case "DW_OP_over":
	// 21
	case "DW_OP_pick":
	// 22
	case "DW_OP_swap":
	// 23
	case "DW_OP_rot":
	// 24
	case "DW_OP_xderef":
	// 25
	case "DW_OP_abs":
	// 26
	case "DW_OP_and":
	// 27
	case "DW_OP_div":
	// 28
	case "DW_OP_minus":
	// 29
	case "DW_OP_mod":
	// 30
	case "DW_OP_mul":
	// 31
	case "DW_OP_neg":
	// 32
	case "DW_OP_not":
	// 33
	case "DW_OP_or":
	// 34
	case "DW_OP_plus":
	// 35
	case "DW_OP_plus_uconst":
	// 36
	case "DW_OP_shl":
	// 37
	case "DW_OP_shr":
	// 38
	case "DW_OP_shra":
	// 39
	case "DW_OP_xor":
	// 40
	case "DW_OP_bra":
	// 41
	case "DW_OP_eq":
	// 42
	case "DW_OP_ge":
	// 43
	case "DW_OP_gt":
	// 44
	case "DW_OP_le":
	// 45
	case "DW_OP_lt":
	// 46
	case "DW_OP_ne":
	// 47
	case "DW_OP_skip":
	// 48
	case "DW_OP_lit0":
	// 49
	case "DW_OP_lit1":
	// 50
	case "DW_OP_lit2":
	// 51
	case "DW_OP_lit3":
	// 52
	case "DW_OP_lit4":
	// 53
	case "DW_OP_lit5":
	// 54
	case "DW_OP_lit6":
	// 55
	case "DW_OP_lit7":
	// 56
	case "DW_OP_lit8":
	// 57
	case "DW_OP_lit9":
	// 58
	case "DW_OP_lit10":
	// 59
	case "DW_OP_lit11":
	// 60
	case "DW_OP_lit12":
	// 61
	case "DW_OP_lit13":
	// 62
	case "DW_OP_lit14":
	// 63
	case "DW_OP_lit15":
	// 64
	case "DW_OP_lit16":
	// 65
	case "DW_OP_lit17":
	// 66
	case "DW_OP_lit18":
	// 67
	case "DW_OP_lit19":
	// 68
	case "DW_OP_lit20":
	// 69
	case "DW_OP_lit21":
	// 70
	case "DW_OP_lit22":
	// 71
	case "DW_OP_lit23":
	// 72
	case "DW_OP_lit24":
	// 73
	case "DW_OP_lit25":
	// 74
	case "DW_OP_lit26":
	// 75
	case "DW_OP_lit27":
	// 76
	case "DW_OP_lit28":
	// 77
	case "DW_OP_lit29":
	// 78
	case "DW_OP_lit30":
	// 79
	case "DW_OP_lit31":
	// 80
	case "DW_OP_reg0":
	// 81
	case "DW_OP_reg1":
	// 82
	case "DW_OP_reg2":
	// 83
	case "DW_OP_reg3":
	// 84
	case "DW_OP_reg4":
	// 85
	case "DW_OP_reg5":
	// 86
	case "DW_OP_reg6":
	// 87
	case "DW_OP_reg7":
	// 88
	case "DW_OP_reg8":
	// 89
	case "DW_OP_reg9":
	// 90
	case "DW_OP_reg10":
	// 91
	case "DW_OP_reg11":
	// 92
	case "DW_OP_reg12":
	// 93
	case "DW_OP_reg13":
	// 94
	case "DW_OP_reg14":
	// 95
	case "DW_OP_reg15":
	// 96
	case "DW_OP_reg16":
	// 97
	case "DW_OP_reg17":
	// 98
	case "DW_OP_reg18":
	// 99
	case "DW_OP_reg19":
	// 100
	case "DW_OP_reg20":
	// 101
	case "DW_OP_reg21":
	// 102
	case "DW_OP_reg22":
	// 103
	case "DW_OP_reg23":
	// 104
	case "DW_OP_reg24":
	// 105
	case "DW_OP_reg25":
	// 106
	case "DW_OP_reg26":
	// 107
	case "DW_OP_reg27":
	// 108
	case "DW_OP_reg28":
	// 109
	case "DW_OP_reg29":
	// 110
	case "DW_OP_reg30":
	// 111
	case "DW_OP_reg31":
	// 112
	case "DW_OP_breg0":
	// 113
	case "DW_OP_breg1":
	// 114
	case "DW_OP_breg2":
	// 115
	case "DW_OP_breg3":
	// 116
	case "DW_OP_breg4":
	// 117
	case "DW_OP_breg5":
	// 118
	case "DW_OP_breg6":
	// 119
	case "DW_OP_breg7":
	// 120
	case "DW_OP_breg8":
	// 121
	case "DW_OP_breg9":
	// 122
	case "DW_OP_breg10":
	// 123
	case "DW_OP_breg11":
	// 124
	case "DW_OP_breg12":
	// 125
	case "DW_OP_breg13":
	// 126
	case "DW_OP_breg14":
	// 127
	case "DW_OP_breg15":
	// 128
	case "DW_OP_breg16":
	// 129
	case "DW_OP_breg17":
	// 130
	case "DW_OP_breg18":
	// 131
	case "DW_OP_breg19":
	// 132
	case "DW_OP_breg20":
	// 133
	case "DW_OP_breg21":
	// 134
	case "DW_OP_breg22":
	// 135
	case "DW_OP_breg23":
	// 136
	case "DW_OP_breg24":
	// 137
	case "DW_OP_breg25":
	// 138
	case "DW_OP_breg26":
	// 139
	case "DW_OP_breg27":
	// 140
	case "DW_OP_breg28":
	// 141
	case "DW_OP_breg29":
	// 142
	case "DW_OP_breg30":
	// 143
	case "DW_OP_breg31":
	// 144
	case "DW_OP_regx":
	// 145
	case "DW_OP_fbreg":
	// 146
	case "DW_OP_bregx":
	// 147
	case "DW_OP_piece":
	// 148
	case "DW_OP_deref_size":
	// 149
	case "DW_OP_xderef_size":
	// 150
	case "DW_OP_nop":
	// 151
	case "DW_OP_push_object_address":
	// 152
	case "DW_OP_call2":
	// 153
	case "DW_OP_call4":
	// 154
	case "DW_OP_call_ref":
	// 155
	case "DW_OP_form_tls_address":
	// 156
	case "DW_OP_call_frame_cfa":
	// 157
	case "DW_OP_bit_piece":
	// 158
	case "DW_OP_implicit_value":
	// 159
	case "DW_OP_stack_value":
	// 160
	case "DW_OP_implicit_pointer":
	// 161
	case "DW_OP_addrx":
	// 162
	case "DW_OP_constx":
	// 163
	case "DW_OP_entry_value":
	// 164
	case "DW_OP_const_type":
	// 165
	case "DW_OP_regval_type":
	// 166
	case "DW_OP_deref_type":
	// 167
	case "DW_OP_xderef_type":
	// 168
	case "DW_OP_convert":
	// 169
	case "DW_OP_reinterpret":
	// 224
	case "DW_OP_GNU_push_tls_address":
	// 225
	case "DW_OP_HP_is_value":
	// 226
	case "DW_OP_HP_fltconst4":
	// 227
	case "DW_OP_HP_fltconst8":
	// 228
	case "DW_OP_HP_mod_range":
	// 229
	case "DW_OP_HP_unmod_range":
	// 230
	case "DW_OP_HP_tls":
	// 232
	case "DW_OP_INTEL_bit_piece":
	// 237
	case "DW_OP_WASM_location":
	// 238
	case "DW_OP_WASM_location_int":
	// 240
	case "DW_OP_APPLE_uninit":
	// 243
	case "DW_OP_GNU_entry_value":
	// 248
	case "DW_OP_PGI_omp_thread_num":
	// 251
	case "DW_OP_GNU_addr_index":
	// 252
	case "DW_OP_GNU_const_index":
	// 4096
	case "DW_OP_LLVM_fragment":
	// 4097
	case "DW_OP_LLVM_convert":
	// 4098
	case "DW_OP_LLVM_tag_offset":
	// 4099
	case "DW_OP_LLVM_entry_value":
	// 4100
	case "DW_OP_LLVM_implicit_pointer":
	// 4101
	case "DW_OP_LLVM_arg":
	}
}
