// Code generated by gocc; DO NOT EDIT.

package parser

import (
	"github.com/llir/llvm/asm/internal/ast"
	"github.com/llir/llvm/asm/internal/astx"
)

type (
	//TODO: change type and variable names to be consistent with other tables
	ProdTab      [numProductions]ProdTabEntry
	ProdTabEntry struct {
		String     string
		Id         string
		NTType     int
		Index      int
		NumSymbols int
		ReduceFunc func([]Attrib) (Attrib, error)
	}
	Attrib interface {
	}
)

var productionsTable = ProdTab{
	ProdTabEntry{
		String: `S' : Module	<<  >>`,
		Id:         "S'",
		NTType:     0,
		Index:      0,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Module : TopLevelDecls	<< astx.NewModule(X[0]) >>`,
		Id:         "Module",
		NTType:     1,
		Index:      1,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewModule(X[0])
		},
	},
	ProdTabEntry{
		String: `TopLevelDecls : empty	<<  >>`,
		Id:         "TopLevelDecls",
		NTType:     2,
		Index:      2,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `TopLevelDecls : TopLevelDeclList	<<  >>`,
		Id:         "TopLevelDecls",
		NTType:     2,
		Index:      3,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `TopLevelDeclList : TopLevelDecl	<< astx.NewTopLevelDeclList(X[0]) >>`,
		Id:         "TopLevelDeclList",
		NTType:     3,
		Index:      4,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewTopLevelDeclList(X[0])
		},
	},
	ProdTabEntry{
		String: `TopLevelDeclList : TopLevelDeclList TopLevelDecl	<< astx.AppendTopLevelDecl(X[0], X[1]) >>`,
		Id:         "TopLevelDeclList",
		NTType:     3,
		Index:      5,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.AppendTopLevelDecl(X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `TopLevelDecl : SourceFilename	<<  >>`,
		Id:         "TopLevelDecl",
		NTType:     4,
		Index:      6,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `TopLevelDecl : TargetSpec	<<  >>`,
		Id:         "TopLevelDecl",
		NTType:     4,
		Index:      7,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `TopLevelDecl : ModuleAsm	<<  >>`,
		Id:         "TopLevelDecl",
		NTType:     4,
		Index:      8,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `TopLevelDecl : TypeDef	<<  >>`,
		Id:         "TopLevelDecl",
		NTType:     4,
		Index:      9,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `TopLevelDecl : ComdatDef	<<  >>`,
		Id:         "TopLevelDecl",
		NTType:     4,
		Index:      10,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `TopLevelDecl : GlobalDecl	<<  >>`,
		Id:         "TopLevelDecl",
		NTType:     4,
		Index:      11,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `TopLevelDecl : GlobalDef	<<  >>`,
		Id:         "TopLevelDecl",
		NTType:     4,
		Index:      12,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `TopLevelDecl : FuncDecl	<<  >>`,
		Id:         "TopLevelDecl",
		NTType:     4,
		Index:      13,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `TopLevelDecl : FuncDef	<<  >>`,
		Id:         "TopLevelDecl",
		NTType:     4,
		Index:      14,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `TopLevelDecl : AttrGroupDef	<<  >>`,
		Id:         "TopLevelDecl",
		NTType:     4,
		Index:      15,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `TopLevelDecl : NamedMetadataDef	<<  >>`,
		Id:         "TopLevelDecl",
		NTType:     4,
		Index:      16,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `TopLevelDecl : MetadataDef	<<  >>`,
		Id:         "TopLevelDecl",
		NTType:     4,
		Index:      17,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `SourceFilename : "source_filename" "=" string_lit	<< nil, nil >>`,
		Id:         "SourceFilename",
		NTType:     5,
		Index:      18,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `TargetSpec : "target" DataLayout	<< X[1], nil >>`,
		Id:         "TargetSpec",
		NTType:     6,
		Index:      19,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[1], nil
		},
	},
	ProdTabEntry{
		String: `TargetSpec : "target" TargetTriple	<< X[1], nil >>`,
		Id:         "TargetSpec",
		NTType:     6,
		Index:      20,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[1], nil
		},
	},
	ProdTabEntry{
		String: `DataLayout : "datalayout" "=" string_lit	<< astx.NewDataLayout(X[2]) >>`,
		Id:         "DataLayout",
		NTType:     7,
		Index:      21,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewDataLayout(X[2])
		},
	},
	ProdTabEntry{
		String: `TargetTriple : "triple" "=" string_lit	<< astx.NewTargetTriple(X[2]) >>`,
		Id:         "TargetTriple",
		NTType:     8,
		Index:      22,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewTargetTriple(X[2])
		},
	},
	ProdTabEntry{
		String: `ModuleAsm : "module" "asm" string_lit	<< nil, nil >>`,
		Id:         "ModuleAsm",
		NTType:     9,
		Index:      23,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `TypeDef : LocalIdent "=" "type" Type	<< astx.NewTypeDef(X[0], X[3]) >>`,
		Id:         "TypeDef",
		NTType:     10,
		Index:      24,
		NumSymbols: 4,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewTypeDef(X[0], X[3])
		},
	},
	ProdTabEntry{
		String: `TypeDef : LocalIdent "=" "type" "opaque"	<< astx.NewTypeDefOpaque(X[0]) >>`,
		Id:         "TypeDef",
		NTType:     10,
		Index:      25,
		NumSymbols: 4,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewTypeDefOpaque(X[0])
		},
	},
	ProdTabEntry{
		String: `ComdatDef : ComdatName "=" "comdat" SelectionKind	<< nil, nil >>`,
		Id:         "ComdatDef",
		NTType:     11,
		Index:      26,
		NumSymbols: 4,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `SelectionKind : "any"	<<  >>`,
		Id:         "SelectionKind",
		NTType:     12,
		Index:      27,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `SelectionKind : "exactmatch"	<<  >>`,
		Id:         "SelectionKind",
		NTType:     12,
		Index:      28,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `SelectionKind : "largest"	<<  >>`,
		Id:         "SelectionKind",
		NTType:     12,
		Index:      29,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `SelectionKind : "noduplicates"	<<  >>`,
		Id:         "SelectionKind",
		NTType:     12,
		Index:      30,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `SelectionKind : "samesize"	<<  >>`,
		Id:         "SelectionKind",
		NTType:     12,
		Index:      31,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `GlobalDecl : GlobalIdent "=" ExternLinkage GlobalOptions Immutable FirstClassType OptCommaAttachedMDList	<< astx.NewGlobalDecl(X[0], X[3], X[4], X[5], X[6]) >>`,
		Id:         "GlobalDecl",
		NTType:     13,
		Index:      32,
		NumSymbols: 7,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewGlobalDecl(X[0], X[3], X[4], X[5], X[6])
		},
	},
	ProdTabEntry{
		String: `GlobalDecl : GlobalIdent "=" ExternLinkage GlobalOptions Immutable FirstClassType "," Align OptCommaAttachedMDList	<< astx.NewGlobalDecl(X[0], X[3], X[4], X[5], X[8]) >>`,
		Id:         "GlobalDecl",
		NTType:     13,
		Index:      33,
		NumSymbols: 9,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewGlobalDecl(X[0], X[3], X[4], X[5], X[8])
		},
	},
	ProdTabEntry{
		String: `GlobalDecl : GlobalIdent "=" ExternLinkage GlobalOptions Immutable FirstClassType "," Comdat OptCommaAttachedMDList	<< astx.NewGlobalDecl(X[0], X[3], X[4], X[5], X[8]) >>`,
		Id:         "GlobalDecl",
		NTType:     13,
		Index:      34,
		NumSymbols: 9,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewGlobalDecl(X[0], X[3], X[4], X[5], X[8])
		},
	},
	ProdTabEntry{
		String: `GlobalDecl : GlobalIdent "=" ExternLinkage GlobalOptions Immutable FirstClassType "," Comdat "," Align OptCommaAttachedMDList	<< astx.NewGlobalDecl(X[0], X[3], X[4], X[5], X[10]) >>`,
		Id:         "GlobalDecl",
		NTType:     13,
		Index:      35,
		NumSymbols: 11,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewGlobalDecl(X[0], X[3], X[4], X[5], X[10])
		},
	},
	ProdTabEntry{
		String: `GlobalDecl : GlobalIdent "=" ExternLinkage GlobalOptions Immutable FirstClassType "," Section OptCommaAttachedMDList	<< astx.NewGlobalDecl(X[0], X[3], X[4], X[5], X[8]) >>`,
		Id:         "GlobalDecl",
		NTType:     13,
		Index:      36,
		NumSymbols: 9,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewGlobalDecl(X[0], X[3], X[4], X[5], X[8])
		},
	},
	ProdTabEntry{
		String: `GlobalDecl : GlobalIdent "=" ExternLinkage GlobalOptions Immutable FirstClassType "," Section "," Align OptCommaAttachedMDList	<< astx.NewGlobalDecl(X[0], X[3], X[4], X[5], X[10]) >>`,
		Id:         "GlobalDecl",
		NTType:     13,
		Index:      37,
		NumSymbols: 11,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewGlobalDecl(X[0], X[3], X[4], X[5], X[10])
		},
	},
	ProdTabEntry{
		String: `GlobalDecl : GlobalIdent "=" ExternLinkage GlobalOptions Immutable FirstClassType "," Section "," Comdat OptCommaAttachedMDList	<< astx.NewGlobalDecl(X[0], X[3], X[4], X[5], X[10]) >>`,
		Id:         "GlobalDecl",
		NTType:     13,
		Index:      38,
		NumSymbols: 11,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewGlobalDecl(X[0], X[3], X[4], X[5], X[10])
		},
	},
	ProdTabEntry{
		String: `GlobalDecl : GlobalIdent "=" ExternLinkage GlobalOptions Immutable FirstClassType "," Section "," Comdat "," Align OptCommaAttachedMDList	<< astx.NewGlobalDecl(X[0], X[3], X[4], X[5], X[12]) >>`,
		Id:         "GlobalDecl",
		NTType:     13,
		Index:      39,
		NumSymbols: 13,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewGlobalDecl(X[0], X[3], X[4], X[5], X[12])
		},
	},
	ProdTabEntry{
		String: `GlobalDef : GlobalIdent "=" OptLinkage GlobalOptions Immutable FirstClassType Constant OptCommaAttachedMDList	<< astx.NewGlobalDef(X[0], X[3], X[4], X[5], X[6], X[7]) >>`,
		Id:         "GlobalDef",
		NTType:     14,
		Index:      40,
		NumSymbols: 8,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewGlobalDef(X[0], X[3], X[4], X[5], X[6], X[7])
		},
	},
	ProdTabEntry{
		String: `GlobalDef : GlobalIdent "=" OptLinkage GlobalOptions Immutable FirstClassType Constant "," Align OptCommaAttachedMDList	<< astx.NewGlobalDef(X[0], X[3], X[4], X[5], X[6], X[9]) >>`,
		Id:         "GlobalDef",
		NTType:     14,
		Index:      41,
		NumSymbols: 10,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewGlobalDef(X[0], X[3], X[4], X[5], X[6], X[9])
		},
	},
	ProdTabEntry{
		String: `GlobalDef : GlobalIdent "=" OptLinkage GlobalOptions Immutable FirstClassType Constant "," Comdat OptCommaAttachedMDList	<< astx.NewGlobalDef(X[0], X[3], X[4], X[5], X[6], X[9]) >>`,
		Id:         "GlobalDef",
		NTType:     14,
		Index:      42,
		NumSymbols: 10,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewGlobalDef(X[0], X[3], X[4], X[5], X[6], X[9])
		},
	},
	ProdTabEntry{
		String: `GlobalDef : GlobalIdent "=" OptLinkage GlobalOptions Immutable FirstClassType Constant "," Comdat "," Align OptCommaAttachedMDList	<< astx.NewGlobalDef(X[0], X[3], X[4], X[5], X[6], X[11]) >>`,
		Id:         "GlobalDef",
		NTType:     14,
		Index:      43,
		NumSymbols: 12,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewGlobalDef(X[0], X[3], X[4], X[5], X[6], X[11])
		},
	},
	ProdTabEntry{
		String: `GlobalDef : GlobalIdent "=" OptLinkage GlobalOptions Immutable FirstClassType Constant "," Section OptCommaAttachedMDList	<< astx.NewGlobalDef(X[0], X[3], X[4], X[5], X[6], X[9]) >>`,
		Id:         "GlobalDef",
		NTType:     14,
		Index:      44,
		NumSymbols: 10,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewGlobalDef(X[0], X[3], X[4], X[5], X[6], X[9])
		},
	},
	ProdTabEntry{
		String: `GlobalDef : GlobalIdent "=" OptLinkage GlobalOptions Immutable FirstClassType Constant "," Section "," Align OptCommaAttachedMDList	<< astx.NewGlobalDef(X[0], X[3], X[4], X[5], X[6], X[11]) >>`,
		Id:         "GlobalDef",
		NTType:     14,
		Index:      45,
		NumSymbols: 12,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewGlobalDef(X[0], X[3], X[4], X[5], X[6], X[11])
		},
	},
	ProdTabEntry{
		String: `GlobalDef : GlobalIdent "=" OptLinkage GlobalOptions Immutable FirstClassType Constant "," Section "," Comdat OptCommaAttachedMDList	<< astx.NewGlobalDef(X[0], X[3], X[4], X[5], X[6], X[11]) >>`,
		Id:         "GlobalDef",
		NTType:     14,
		Index:      46,
		NumSymbols: 12,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewGlobalDef(X[0], X[3], X[4], X[5], X[6], X[11])
		},
	},
	ProdTabEntry{
		String: `GlobalDef : GlobalIdent "=" OptLinkage GlobalOptions Immutable FirstClassType Constant "," Section "," Comdat "," Align OptCommaAttachedMDList	<< astx.NewGlobalDef(X[0], X[3], X[4], X[5], X[6], X[13]) >>`,
		Id:         "GlobalDef",
		NTType:     14,
		Index:      47,
		NumSymbols: 14,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewGlobalDef(X[0], X[3], X[4], X[5], X[6], X[13])
		},
	},
	ProdTabEntry{
		String: `GlobalOptions : OptVisibility OptDLLStorageClass OptThreadLocal OptUnnamedAddr OptAddrSpace OptExternallyInitialized	<< X[4], nil >>`,
		Id:         "GlobalOptions",
		NTType:     15,
		Index:      48,
		NumSymbols: 6,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[4], nil
		},
	},
	ProdTabEntry{
		String: `OptExternallyInitialized : empty	<<  >>`,
		Id:         "OptExternallyInitialized",
		NTType:     16,
		Index:      49,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `OptExternallyInitialized : ExternallyInitialized	<<  >>`,
		Id:         "OptExternallyInitialized",
		NTType:     16,
		Index:      50,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ExternallyInitialized : "externally_initialized"	<<  >>`,
		Id:         "ExternallyInitialized",
		NTType:     17,
		Index:      51,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Immutable : "constant"	<< true, nil >>`,
		Id:         "Immutable",
		NTType:     18,
		Index:      52,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return true, nil
		},
	},
	ProdTabEntry{
		String: `Immutable : "global"	<< false, nil >>`,
		Id:         "Immutable",
		NTType:     18,
		Index:      53,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return false, nil
		},
	},
	ProdTabEntry{
		String: `FuncDecl : "declare" AttachedMDs OptExternLinkage FuncHeader	<< astx.NewFuncDecl(X[1], X[3]) >>`,
		Id:         "FuncDecl",
		NTType:     19,
		Index:      54,
		NumSymbols: 4,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewFuncDecl(X[1], X[3])
		},
	},
	ProdTabEntry{
		String: `FuncDef : "define" OptLinkage FuncHeader AttachedMDs FuncBody	<< astx.NewFuncDef(X[2], X[3], X[4]) >>`,
		Id:         "FuncDef",
		NTType:     20,
		Index:      55,
		NumSymbols: 5,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewFuncDef(X[2], X[3], X[4])
		},
	},
	ProdTabEntry{
		String: `FuncHeader : OptVisibility OptDLLStorageClass OptCallConv ParamAttrs Type GlobalIdent "(" Params ")" OptUnnamedAddr FuncAttrs OptSection OptComdat OptAlign OptGC OptPrefix OptPrologue OptPersonality	<< astx.NewFuncHeader(X[2], X[4], X[5], X[7]) >>`,
		Id:         "FuncHeader",
		NTType:     21,
		Index:      56,
		NumSymbols: 18,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewFuncHeader(X[2], X[4], X[5], X[7])
		},
	},
	ProdTabEntry{
		String: `Params : empty	<<  >>`,
		Id:         "Params",
		NTType:     22,
		Index:      57,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `Params : "..."	<< astx.NewParams(nil, true) >>`,
		Id:         "Params",
		NTType:     22,
		Index:      58,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewParams(nil, true)
		},
	},
	ProdTabEntry{
		String: `Params : ParamList	<< astx.NewParams(X[0], false) >>`,
		Id:         "Params",
		NTType:     22,
		Index:      59,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewParams(X[0], false)
		},
	},
	ProdTabEntry{
		String: `Params : ParamList "," "..."	<< astx.NewParams(X[0], true) >>`,
		Id:         "Params",
		NTType:     22,
		Index:      60,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewParams(X[0], true)
		},
	},
	ProdTabEntry{
		String: `ParamList : Param	<< astx.NewParamList(X[0]) >>`,
		Id:         "ParamList",
		NTType:     23,
		Index:      61,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewParamList(X[0])
		},
	},
	ProdTabEntry{
		String: `ParamList : ParamList "," Param	<< astx.AppendParam(X[0], X[2]) >>`,
		Id:         "ParamList",
		NTType:     23,
		Index:      62,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.AppendParam(X[0], X[2])
		},
	},
	ProdTabEntry{
		String: `Param : FirstClassType ParamAttrs	<< astx.NewParam(X[0], nil) >>`,
		Id:         "Param",
		NTType:     24,
		Index:      63,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewParam(X[0], nil)
		},
	},
	ProdTabEntry{
		String: `Param : FirstClassType ParamAttrs LocalIdent	<< astx.NewParam(X[0], X[2]) >>`,
		Id:         "Param",
		NTType:     24,
		Index:      64,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewParam(X[0], X[2])
		},
	},
	ProdTabEntry{
		String: `FuncBody : "{" BasicBlockList "}"	<< X[1], nil >>`,
		Id:         "FuncBody",
		NTType:     25,
		Index:      65,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[1], nil
		},
	},
	ProdTabEntry{
		String: `AttrGroupDef : "attributes" AttrGroupID "=" "{" FuncAttrList "}"	<< nil, nil >>`,
		Id:         "AttrGroupDef",
		NTType:     26,
		Index:      66,
		NumSymbols: 6,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `NamedMetadataDef : MetadataName "=" "!" "{" MetadataIDs "}"	<< astx.NewNamedMetadataDef(X[0], X[4]) >>`,
		Id:         "NamedMetadataDef",
		NTType:     27,
		Index:      67,
		NumSymbols: 6,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewNamedMetadataDef(X[0], X[4])
		},
	},
	ProdTabEntry{
		String: `MetadataIDs : empty	<<  >>`,
		Id:         "MetadataIDs",
		NTType:     28,
		Index:      68,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `MetadataIDs : MetadataIDList	<<  >>`,
		Id:         "MetadataIDs",
		NTType:     28,
		Index:      69,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `MetadataIDList : MetadataID	<< astx.NewMetadataIDList(X[0]) >>`,
		Id:         "MetadataIDList",
		NTType:     29,
		Index:      70,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewMetadataIDList(X[0])
		},
	},
	ProdTabEntry{
		String: `MetadataIDList : MetadataIDList "," MetadataID	<< astx.AppendMetadataID(X[0], X[2]) >>`,
		Id:         "MetadataIDList",
		NTType:     29,
		Index:      71,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.AppendMetadataID(X[0], X[2])
		},
	},
	ProdTabEntry{
		String: `MetadataDef : MetadataID "=" OptDistinct Metadata	<< astx.NewMetadataDef(X[0], X[3]) >>`,
		Id:         "MetadataDef",
		NTType:     30,
		Index:      72,
		NumSymbols: 4,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewMetadataDef(X[0], X[3])
		},
	},
	ProdTabEntry{
		String: `OptDistinct : empty	<<  >>`,
		Id:         "OptDistinct",
		NTType:     31,
		Index:      73,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `OptDistinct : "distinct"	<<  >>`,
		Id:         "OptDistinct",
		NTType:     31,
		Index:      74,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Metadata : "!" "{" MetadataNodes "}"	<< astx.NewMetadata(X[2]) >>`,
		Id:         "Metadata",
		NTType:     32,
		Index:      75,
		NumSymbols: 4,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewMetadata(X[2])
		},
	},
	ProdTabEntry{
		String: `MetadataNodes : empty	<<  >>`,
		Id:         "MetadataNodes",
		NTType:     33,
		Index:      76,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `MetadataNodes : MetadataNodeList	<<  >>`,
		Id:         "MetadataNodes",
		NTType:     33,
		Index:      77,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `MetadataNodeList : MetadataNode	<< astx.NewMetadataNodeList(X[0]) >>`,
		Id:         "MetadataNodeList",
		NTType:     34,
		Index:      78,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewMetadataNodeList(X[0])
		},
	},
	ProdTabEntry{
		String: `MetadataNodeList : MetadataNodeList "," MetadataNode	<< astx.AppendMetadataNode(X[0], X[2]) >>`,
		Id:         "MetadataNodeList",
		NTType:     34,
		Index:      79,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.AppendMetadataNode(X[0], X[2])
		},
	},
	ProdTabEntry{
		String: `MetadataNode : Metadata	<<  >>`,
		Id:         "MetadataNode",
		NTType:     35,
		Index:      80,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `MetadataNode : MetadataID	<<  >>`,
		Id:         "MetadataNode",
		NTType:     35,
		Index:      81,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `MetadataNode : "!" string_lit	<< astx.NewMetadataString(X[1]) >>`,
		Id:         "MetadataNode",
		NTType:     35,
		Index:      82,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewMetadataString(X[1])
		},
	},
	ProdTabEntry{
		String: `MetadataNode : Type Constant	<< astx.NewConstant(X[0], X[1]) >>`,
		Id:         "MetadataNode",
		NTType:     35,
		Index:      83,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewConstant(X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `GlobalIdent : global_ident	<< astx.NewGlobalIdent(X[0]) >>`,
		Id:         "GlobalIdent",
		NTType:     36,
		Index:      84,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewGlobalIdent(X[0])
		},
	},
	ProdTabEntry{
		String: `LocalIdent : local_ident	<< astx.NewLocalIdent(X[0]) >>`,
		Id:         "LocalIdent",
		NTType:     37,
		Index:      85,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewLocalIdent(X[0])
		},
	},
	ProdTabEntry{
		String: `LabelIdent : label_ident	<< astx.NewLabelIdent(X[0]) >>`,
		Id:         "LabelIdent",
		NTType:     38,
		Index:      86,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewLabelIdent(X[0])
		},
	},
	ProdTabEntry{
		String: `AttrGroupID : attr_group_id	<<  >>`,
		Id:         "AttrGroupID",
		NTType:     39,
		Index:      87,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ComdatName : comdat_name	<<  >>`,
		Id:         "ComdatName",
		NTType:     40,
		Index:      88,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `MetadataName : metadata_name	<< astx.NewMetadataName(X[0]) >>`,
		Id:         "MetadataName",
		NTType:     41,
		Index:      89,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewMetadataName(X[0])
		},
	},
	ProdTabEntry{
		String: `MetadataID : metadata_id	<< astx.NewMetadataID(X[0]) >>`,
		Id:         "MetadataID",
		NTType:     42,
		Index:      90,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewMetadataID(X[0])
		},
	},
	ProdTabEntry{
		String: `Type : VoidType	<<  >>`,
		Id:         "Type",
		NTType:     43,
		Index:      91,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Type : FuncType	<<  >>`,
		Id:         "Type",
		NTType:     43,
		Index:      92,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Type : FirstClassType	<<  >>`,
		Id:         "Type",
		NTType:     43,
		Index:      93,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FirstClassType : IntType	<<  >>`,
		Id:         "FirstClassType",
		NTType:     44,
		Index:      94,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FirstClassType : FloatType	<<  >>`,
		Id:         "FirstClassType",
		NTType:     44,
		Index:      95,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FirstClassType : PointerType	<<  >>`,
		Id:         "FirstClassType",
		NTType:     44,
		Index:      96,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FirstClassType : VectorType	<<  >>`,
		Id:         "FirstClassType",
		NTType:     44,
		Index:      97,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FirstClassType : LabelType	<<  >>`,
		Id:         "FirstClassType",
		NTType:     44,
		Index:      98,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FirstClassType : MetadataType	<<  >>`,
		Id:         "FirstClassType",
		NTType:     44,
		Index:      99,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FirstClassType : ArrayType	<<  >>`,
		Id:         "FirstClassType",
		NTType:     44,
		Index:      100,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FirstClassType : StructType	<<  >>`,
		Id:         "FirstClassType",
		NTType:     44,
		Index:      101,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FirstClassType : NamedType	<<  >>`,
		Id:         "FirstClassType",
		NTType:     44,
		Index:      102,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `VoidType : "void"	<< &ast.VoidType{}, nil >>`,
		Id:         "VoidType",
		NTType:     45,
		Index:      103,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return &ast.VoidType{}, nil
		},
	},
	ProdTabEntry{
		String: `FuncType : Type "(" ParamTypes ")"	<< astx.NewFuncType(X[0], X[2]) >>`,
		Id:         "FuncType",
		NTType:     46,
		Index:      104,
		NumSymbols: 4,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewFuncType(X[0], X[2])
		},
	},
	ProdTabEntry{
		String: `ParamTypes : empty	<<  >>`,
		Id:         "ParamTypes",
		NTType:     47,
		Index:      105,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `ParamTypes : "..."	<< astx.NewParams(nil, true) >>`,
		Id:         "ParamTypes",
		NTType:     47,
		Index:      106,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewParams(nil, true)
		},
	},
	ProdTabEntry{
		String: `ParamTypes : ParamTypeList	<< astx.NewParams(X[0], false) >>`,
		Id:         "ParamTypes",
		NTType:     47,
		Index:      107,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewParams(X[0], false)
		},
	},
	ProdTabEntry{
		String: `ParamTypes : ParamTypeList "," "..."	<< astx.NewParams(X[0], true) >>`,
		Id:         "ParamTypes",
		NTType:     47,
		Index:      108,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewParams(X[0], true)
		},
	},
	ProdTabEntry{
		String: `ParamTypeList : ParamType	<< astx.NewParamList(X[0]) >>`,
		Id:         "ParamTypeList",
		NTType:     48,
		Index:      109,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewParamList(X[0])
		},
	},
	ProdTabEntry{
		String: `ParamTypeList : ParamTypeList "," ParamType	<< astx.AppendParam(X[0], X[2]) >>`,
		Id:         "ParamTypeList",
		NTType:     48,
		Index:      110,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.AppendParam(X[0], X[2])
		},
	},
	ProdTabEntry{
		String: `ParamType : FirstClassType	<< astx.NewParam(X[0], nil) >>`,
		Id:         "ParamType",
		NTType:     49,
		Index:      111,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewParam(X[0], nil)
		},
	},
	ProdTabEntry{
		String: `IntType : int_type	<< astx.NewIntType(X[0]) >>`,
		Id:         "IntType",
		NTType:     50,
		Index:      112,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewIntType(X[0])
		},
	},
	ProdTabEntry{
		String: `FloatType : "half"	<< &ast.FloatType{Kind: ast.FloatKindIEEE_16}, nil >>`,
		Id:         "FloatType",
		NTType:     51,
		Index:      113,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return &ast.FloatType{Kind: ast.FloatKindIEEE_16}, nil
		},
	},
	ProdTabEntry{
		String: `FloatType : "float"	<< &ast.FloatType{Kind: ast.FloatKindIEEE_32}, nil >>`,
		Id:         "FloatType",
		NTType:     51,
		Index:      114,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return &ast.FloatType{Kind: ast.FloatKindIEEE_32}, nil
		},
	},
	ProdTabEntry{
		String: `FloatType : "double"	<< &ast.FloatType{Kind: ast.FloatKindIEEE_64}, nil >>`,
		Id:         "FloatType",
		NTType:     51,
		Index:      115,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return &ast.FloatType{Kind: ast.FloatKindIEEE_64}, nil
		},
	},
	ProdTabEntry{
		String: `FloatType : "fp128"	<< &ast.FloatType{Kind: ast.FloatKindIEEE_128}, nil >>`,
		Id:         "FloatType",
		NTType:     51,
		Index:      116,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return &ast.FloatType{Kind: ast.FloatKindIEEE_128}, nil
		},
	},
	ProdTabEntry{
		String: `FloatType : "x86_fp80"	<< &ast.FloatType{Kind: ast.FloatKindDoubleExtended_80}, nil >>`,
		Id:         "FloatType",
		NTType:     51,
		Index:      117,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return &ast.FloatType{Kind: ast.FloatKindDoubleExtended_80}, nil
		},
	},
	ProdTabEntry{
		String: `FloatType : "ppc_fp128"	<< &ast.FloatType{Kind: ast.FloatKindDoubleDouble_128}, nil >>`,
		Id:         "FloatType",
		NTType:     51,
		Index:      118,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return &ast.FloatType{Kind: ast.FloatKindDoubleDouble_128}, nil
		},
	},
	ProdTabEntry{
		String: `PointerType : Type OptAddrSpace "*"	<< astx.NewPointerType(X[0], X[1]) >>`,
		Id:         "PointerType",
		NTType:     52,
		Index:      119,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewPointerType(X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `OptAddrSpace : empty	<<  >>`,
		Id:         "OptAddrSpace",
		NTType:     53,
		Index:      120,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `OptAddrSpace : "addrspace" "(" IntLit ")"	<< X[2], nil >>`,
		Id:         "OptAddrSpace",
		NTType:     53,
		Index:      121,
		NumSymbols: 4,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[2], nil
		},
	},
	ProdTabEntry{
		String: `VectorType : "<" IntLit "x" FirstClassType ">"	<< astx.NewVectorType(X[1], X[3]) >>`,
		Id:         "VectorType",
		NTType:     54,
		Index:      122,
		NumSymbols: 5,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewVectorType(X[1], X[3])
		},
	},
	ProdTabEntry{
		String: `LabelType : "label"	<< &ast.LabelType{}, nil >>`,
		Id:         "LabelType",
		NTType:     55,
		Index:      123,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return &ast.LabelType{}, nil
		},
	},
	ProdTabEntry{
		String: `MetadataType : "metadata"	<< &ast.MetadataType{}, nil >>`,
		Id:         "MetadataType",
		NTType:     56,
		Index:      124,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return &ast.MetadataType{}, nil
		},
	},
	ProdTabEntry{
		String: `ArrayType : "[" IntLit "x" FirstClassType "]"	<< astx.NewArrayType(X[1], X[3]) >>`,
		Id:         "ArrayType",
		NTType:     57,
		Index:      125,
		NumSymbols: 5,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewArrayType(X[1], X[3])
		},
	},
	ProdTabEntry{
		String: `StructType : "{" "}"	<< astx.NewStructType(nil) >>`,
		Id:         "StructType",
		NTType:     58,
		Index:      126,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewStructType(nil)
		},
	},
	ProdTabEntry{
		String: `StructType : "{" FieldList "}"	<< astx.NewStructType(X[1]) >>`,
		Id:         "StructType",
		NTType:     58,
		Index:      127,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewStructType(X[1])
		},
	},
	ProdTabEntry{
		String: `StructType : "<" "{" "}" ">"	<< astx.NewStructType(nil) >>`,
		Id:         "StructType",
		NTType:     58,
		Index:      128,
		NumSymbols: 4,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewStructType(nil)
		},
	},
	ProdTabEntry{
		String: `StructType : "<" "{" FieldList "}" ">"	<< astx.NewStructType(X[2]) >>`,
		Id:         "StructType",
		NTType:     58,
		Index:      129,
		NumSymbols: 5,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewStructType(X[2])
		},
	},
	ProdTabEntry{
		String: `FieldList : FirstClassType	<< astx.NewTypeList(X[0]) >>`,
		Id:         "FieldList",
		NTType:     59,
		Index:      130,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewTypeList(X[0])
		},
	},
	ProdTabEntry{
		String: `FieldList : FieldList "," FirstClassType	<< astx.AppendType(X[0], X[2]) >>`,
		Id:         "FieldList",
		NTType:     59,
		Index:      131,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.AppendType(X[0], X[2])
		},
	},
	ProdTabEntry{
		String: `NamedType : LocalIdent	<< astx.NewTypeIdent(X[0]) >>`,
		Id:         "NamedType",
		NTType:     60,
		Index:      132,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewTypeIdent(X[0])
		},
	},
	ProdTabEntry{
		String: `Value : LocalIdent	<<  >>`,
		Id:         "Value",
		NTType:     61,
		Index:      133,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Value : Constant	<<  >>`,
		Id:         "Value",
		NTType:     61,
		Index:      134,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Constant : IntConst	<<  >>`,
		Id:         "Constant",
		NTType:     62,
		Index:      135,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Constant : FloatConst	<<  >>`,
		Id:         "Constant",
		NTType:     62,
		Index:      136,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Constant : NullConst	<<  >>`,
		Id:         "Constant",
		NTType:     62,
		Index:      137,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Constant : VectorConst	<<  >>`,
		Id:         "Constant",
		NTType:     62,
		Index:      138,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Constant : ArrayConst	<<  >>`,
		Id:         "Constant",
		NTType:     62,
		Index:      139,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Constant : CharArrayConst	<<  >>`,
		Id:         "Constant",
		NTType:     62,
		Index:      140,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Constant : StructConst	<<  >>`,
		Id:         "Constant",
		NTType:     62,
		Index:      141,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Constant : ZeroInitializerConst	<<  >>`,
		Id:         "Constant",
		NTType:     62,
		Index:      142,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Constant : GlobalIdent	<<  >>`,
		Id:         "Constant",
		NTType:     62,
		Index:      143,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Constant : UndefConst	<<  >>`,
		Id:         "Constant",
		NTType:     62,
		Index:      144,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Constant : ConstExpr	<<  >>`,
		Id:         "Constant",
		NTType:     62,
		Index:      145,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `IntConst : IntLit	<<  >>`,
		Id:         "IntConst",
		NTType:     63,
		Index:      146,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `IntConst : BoolLit	<<  >>`,
		Id:         "IntConst",
		NTType:     63,
		Index:      147,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `IntLit : int_lit	<< astx.NewIntLit(X[0]) >>`,
		Id:         "IntLit",
		NTType:     64,
		Index:      148,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewIntLit(X[0])
		},
	},
	ProdTabEntry{
		String: `BoolLit : "true"	<< astx.NewBoolLit(X[0]) >>`,
		Id:         "BoolLit",
		NTType:     65,
		Index:      149,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewBoolLit(X[0])
		},
	},
	ProdTabEntry{
		String: `BoolLit : "false"	<< astx.NewBoolLit(X[0]) >>`,
		Id:         "BoolLit",
		NTType:     65,
		Index:      150,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewBoolLit(X[0])
		},
	},
	ProdTabEntry{
		String: `FloatConst : float_lit	<< astx.NewFloatLit(X[0]) >>`,
		Id:         "FloatConst",
		NTType:     66,
		Index:      151,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewFloatLit(X[0])
		},
	},
	ProdTabEntry{
		String: `NullConst : "null"	<< &astx.NullLit{}, nil >>`,
		Id:         "NullConst",
		NTType:     67,
		Index:      152,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return &astx.NullLit{}, nil
		},
	},
	ProdTabEntry{
		String: `VectorConst : "<" ElemList ">"	<< astx.NewVectorConst(X[1]) >>`,
		Id:         "VectorConst",
		NTType:     68,
		Index:      153,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewVectorConst(X[1])
		},
	},
	ProdTabEntry{
		String: `ArrayConst : "[" Elems "]"	<< astx.NewArrayConst(X[1]) >>`,
		Id:         "ArrayConst",
		NTType:     69,
		Index:      154,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewArrayConst(X[1])
		},
	},
	ProdTabEntry{
		String: `CharArrayConst : "c" string_lit	<< astx.NewCharArrayConst(X[1]) >>`,
		Id:         "CharArrayConst",
		NTType:     70,
		Index:      155,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewCharArrayConst(X[1])
		},
	},
	ProdTabEntry{
		String: `StructConst : "{" "}"	<< astx.NewStructConst(nil) >>`,
		Id:         "StructConst",
		NTType:     71,
		Index:      156,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewStructConst(nil)
		},
	},
	ProdTabEntry{
		String: `StructConst : "{" ElemList "}"	<< astx.NewStructConst(X[1]) >>`,
		Id:         "StructConst",
		NTType:     71,
		Index:      157,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewStructConst(X[1])
		},
	},
	ProdTabEntry{
		String: `StructConst : "<" "{" "}" ">"	<< astx.NewStructConst(nil) >>`,
		Id:         "StructConst",
		NTType:     71,
		Index:      158,
		NumSymbols: 4,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewStructConst(nil)
		},
	},
	ProdTabEntry{
		String: `StructConst : "<" "{" ElemList "}" ">"	<< astx.NewStructConst(X[2]) >>`,
		Id:         "StructConst",
		NTType:     71,
		Index:      159,
		NumSymbols: 5,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewStructConst(X[2])
		},
	},
	ProdTabEntry{
		String: `ZeroInitializerConst : "zeroinitializer"	<< &astx.ZeroInitializerLit{}, nil >>`,
		Id:         "ZeroInitializerConst",
		NTType:     72,
		Index:      160,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return &astx.ZeroInitializerLit{}, nil
		},
	},
	ProdTabEntry{
		String: `UndefConst : "undef"	<< &astx.UndefLit{}, nil >>`,
		Id:         "UndefConst",
		NTType:     73,
		Index:      161,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return &astx.UndefLit{}, nil
		},
	},
	ProdTabEntry{
		String: `ConstExpr : AddExpr	<<  >>`,
		Id:         "ConstExpr",
		NTType:     74,
		Index:      162,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ConstExpr : FAddExpr	<<  >>`,
		Id:         "ConstExpr",
		NTType:     74,
		Index:      163,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ConstExpr : SubExpr	<<  >>`,
		Id:         "ConstExpr",
		NTType:     74,
		Index:      164,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ConstExpr : FSubExpr	<<  >>`,
		Id:         "ConstExpr",
		NTType:     74,
		Index:      165,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ConstExpr : MulExpr	<<  >>`,
		Id:         "ConstExpr",
		NTType:     74,
		Index:      166,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ConstExpr : FMulExpr	<<  >>`,
		Id:         "ConstExpr",
		NTType:     74,
		Index:      167,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ConstExpr : UDivExpr	<<  >>`,
		Id:         "ConstExpr",
		NTType:     74,
		Index:      168,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ConstExpr : SDivExpr	<<  >>`,
		Id:         "ConstExpr",
		NTType:     74,
		Index:      169,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ConstExpr : FDivExpr	<<  >>`,
		Id:         "ConstExpr",
		NTType:     74,
		Index:      170,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ConstExpr : URemExpr	<<  >>`,
		Id:         "ConstExpr",
		NTType:     74,
		Index:      171,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ConstExpr : SRemExpr	<<  >>`,
		Id:         "ConstExpr",
		NTType:     74,
		Index:      172,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ConstExpr : FRemExpr	<<  >>`,
		Id:         "ConstExpr",
		NTType:     74,
		Index:      173,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ConstExpr : ShlExpr	<<  >>`,
		Id:         "ConstExpr",
		NTType:     74,
		Index:      174,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ConstExpr : LShrExpr	<<  >>`,
		Id:         "ConstExpr",
		NTType:     74,
		Index:      175,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ConstExpr : AShrExpr	<<  >>`,
		Id:         "ConstExpr",
		NTType:     74,
		Index:      176,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ConstExpr : AndExpr	<<  >>`,
		Id:         "ConstExpr",
		NTType:     74,
		Index:      177,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ConstExpr : OrExpr	<<  >>`,
		Id:         "ConstExpr",
		NTType:     74,
		Index:      178,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ConstExpr : XorExpr	<<  >>`,
		Id:         "ConstExpr",
		NTType:     74,
		Index:      179,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ConstExpr : ExtractElementExpr	<<  >>`,
		Id:         "ConstExpr",
		NTType:     74,
		Index:      180,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ConstExpr : InsertElementExpr	<<  >>`,
		Id:         "ConstExpr",
		NTType:     74,
		Index:      181,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ConstExpr : ShuffleVectorExpr	<<  >>`,
		Id:         "ConstExpr",
		NTType:     74,
		Index:      182,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ConstExpr : ExtractValueExpr	<<  >>`,
		Id:         "ConstExpr",
		NTType:     74,
		Index:      183,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ConstExpr : InsertValueExpr	<<  >>`,
		Id:         "ConstExpr",
		NTType:     74,
		Index:      184,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ConstExpr : GetElementPtrExpr	<<  >>`,
		Id:         "ConstExpr",
		NTType:     74,
		Index:      185,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ConstExpr : TruncExpr	<<  >>`,
		Id:         "ConstExpr",
		NTType:     74,
		Index:      186,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ConstExpr : ZExtExpr	<<  >>`,
		Id:         "ConstExpr",
		NTType:     74,
		Index:      187,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ConstExpr : SExtExpr	<<  >>`,
		Id:         "ConstExpr",
		NTType:     74,
		Index:      188,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ConstExpr : FPTruncExpr	<<  >>`,
		Id:         "ConstExpr",
		NTType:     74,
		Index:      189,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ConstExpr : FPExtExpr	<<  >>`,
		Id:         "ConstExpr",
		NTType:     74,
		Index:      190,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ConstExpr : FPToUIExpr	<<  >>`,
		Id:         "ConstExpr",
		NTType:     74,
		Index:      191,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ConstExpr : FPToSIExpr	<<  >>`,
		Id:         "ConstExpr",
		NTType:     74,
		Index:      192,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ConstExpr : UIToFPExpr	<<  >>`,
		Id:         "ConstExpr",
		NTType:     74,
		Index:      193,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ConstExpr : SIToFPExpr	<<  >>`,
		Id:         "ConstExpr",
		NTType:     74,
		Index:      194,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ConstExpr : PtrToIntExpr	<<  >>`,
		Id:         "ConstExpr",
		NTType:     74,
		Index:      195,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ConstExpr : IntToPtrExpr	<<  >>`,
		Id:         "ConstExpr",
		NTType:     74,
		Index:      196,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ConstExpr : BitCastExpr	<<  >>`,
		Id:         "ConstExpr",
		NTType:     74,
		Index:      197,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ConstExpr : AddrSpaceCastExpr	<<  >>`,
		Id:         "ConstExpr",
		NTType:     74,
		Index:      198,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ConstExpr : ICmpExpr	<<  >>`,
		Id:         "ConstExpr",
		NTType:     74,
		Index:      199,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ConstExpr : FCmpExpr	<<  >>`,
		Id:         "ConstExpr",
		NTType:     74,
		Index:      200,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ConstExpr : SelectExpr	<<  >>`,
		Id:         "ConstExpr",
		NTType:     74,
		Index:      201,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `AddExpr : "add" "(" FirstClassType Constant "," FirstClassType Constant ")"	<< astx.NewAddExpr(X[2], X[3], X[5], X[6]) >>`,
		Id:         "AddExpr",
		NTType:     75,
		Index:      202,
		NumSymbols: 8,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewAddExpr(X[2], X[3], X[5], X[6])
		},
	},
	ProdTabEntry{
		String: `FAddExpr : "fadd" "(" FirstClassType Constant "," FirstClassType Constant ")"	<< astx.NewFAddExpr(X[2], X[3], X[5], X[6]) >>`,
		Id:         "FAddExpr",
		NTType:     76,
		Index:      203,
		NumSymbols: 8,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewFAddExpr(X[2], X[3], X[5], X[6])
		},
	},
	ProdTabEntry{
		String: `SubExpr : "sub" "(" FirstClassType Constant "," FirstClassType Constant ")"	<< astx.NewSubExpr(X[2], X[3], X[5], X[6]) >>`,
		Id:         "SubExpr",
		NTType:     77,
		Index:      204,
		NumSymbols: 8,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewSubExpr(X[2], X[3], X[5], X[6])
		},
	},
	ProdTabEntry{
		String: `FSubExpr : "fsub" "(" FirstClassType Constant "," FirstClassType Constant ")"	<< astx.NewFSubExpr(X[2], X[3], X[5], X[6]) >>`,
		Id:         "FSubExpr",
		NTType:     78,
		Index:      205,
		NumSymbols: 8,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewFSubExpr(X[2], X[3], X[5], X[6])
		},
	},
	ProdTabEntry{
		String: `MulExpr : "mul" "(" FirstClassType Constant "," FirstClassType Constant ")"	<< astx.NewMulExpr(X[2], X[3], X[5], X[6]) >>`,
		Id:         "MulExpr",
		NTType:     79,
		Index:      206,
		NumSymbols: 8,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewMulExpr(X[2], X[3], X[5], X[6])
		},
	},
	ProdTabEntry{
		String: `FMulExpr : "fmul" "(" FirstClassType Constant "," FirstClassType Constant ")"	<< astx.NewFMulExpr(X[2], X[3], X[5], X[6]) >>`,
		Id:         "FMulExpr",
		NTType:     80,
		Index:      207,
		NumSymbols: 8,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewFMulExpr(X[2], X[3], X[5], X[6])
		},
	},
	ProdTabEntry{
		String: `UDivExpr : "udiv" "(" FirstClassType Constant "," FirstClassType Constant ")"	<< astx.NewUDivExpr(X[2], X[3], X[5], X[6]) >>`,
		Id:         "UDivExpr",
		NTType:     81,
		Index:      208,
		NumSymbols: 8,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewUDivExpr(X[2], X[3], X[5], X[6])
		},
	},
	ProdTabEntry{
		String: `SDivExpr : "sdiv" "(" FirstClassType Constant "," FirstClassType Constant ")"	<< astx.NewSDivExpr(X[2], X[3], X[5], X[6]) >>`,
		Id:         "SDivExpr",
		NTType:     82,
		Index:      209,
		NumSymbols: 8,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewSDivExpr(X[2], X[3], X[5], X[6])
		},
	},
	ProdTabEntry{
		String: `FDivExpr : "fdiv" "(" FirstClassType Constant "," FirstClassType Constant ")"	<< astx.NewFDivExpr(X[2], X[3], X[5], X[6]) >>`,
		Id:         "FDivExpr",
		NTType:     83,
		Index:      210,
		NumSymbols: 8,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewFDivExpr(X[2], X[3], X[5], X[6])
		},
	},
	ProdTabEntry{
		String: `URemExpr : "urem" "(" FirstClassType Constant "," FirstClassType Constant ")"	<< astx.NewURemExpr(X[2], X[3], X[5], X[6]) >>`,
		Id:         "URemExpr",
		NTType:     84,
		Index:      211,
		NumSymbols: 8,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewURemExpr(X[2], X[3], X[5], X[6])
		},
	},
	ProdTabEntry{
		String: `SRemExpr : "srem" "(" FirstClassType Constant "," FirstClassType Constant ")"	<< astx.NewSRemExpr(X[2], X[3], X[5], X[6]) >>`,
		Id:         "SRemExpr",
		NTType:     85,
		Index:      212,
		NumSymbols: 8,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewSRemExpr(X[2], X[3], X[5], X[6])
		},
	},
	ProdTabEntry{
		String: `FRemExpr : "frem" "(" FirstClassType Constant "," FirstClassType Constant ")"	<< astx.NewFRemExpr(X[2], X[3], X[5], X[6]) >>`,
		Id:         "FRemExpr",
		NTType:     86,
		Index:      213,
		NumSymbols: 8,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewFRemExpr(X[2], X[3], X[5], X[6])
		},
	},
	ProdTabEntry{
		String: `ShlExpr : "shl" "(" FirstClassType Constant "," FirstClassType Constant ")"	<< astx.NewShlExpr(X[2], X[3], X[5], X[6]) >>`,
		Id:         "ShlExpr",
		NTType:     87,
		Index:      214,
		NumSymbols: 8,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewShlExpr(X[2], X[3], X[5], X[6])
		},
	},
	ProdTabEntry{
		String: `LShrExpr : "lshr" "(" FirstClassType Constant "," FirstClassType Constant ")"	<< astx.NewLShrExpr(X[2], X[3], X[5], X[6]) >>`,
		Id:         "LShrExpr",
		NTType:     88,
		Index:      215,
		NumSymbols: 8,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewLShrExpr(X[2], X[3], X[5], X[6])
		},
	},
	ProdTabEntry{
		String: `AShrExpr : "ashr" "(" FirstClassType Constant "," FirstClassType Constant ")"	<< astx.NewAShrExpr(X[2], X[3], X[5], X[6]) >>`,
		Id:         "AShrExpr",
		NTType:     89,
		Index:      216,
		NumSymbols: 8,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewAShrExpr(X[2], X[3], X[5], X[6])
		},
	},
	ProdTabEntry{
		String: `AndExpr : "and" "(" FirstClassType Constant "," FirstClassType Constant ")"	<< astx.NewAndExpr(X[2], X[3], X[5], X[6]) >>`,
		Id:         "AndExpr",
		NTType:     90,
		Index:      217,
		NumSymbols: 8,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewAndExpr(X[2], X[3], X[5], X[6])
		},
	},
	ProdTabEntry{
		String: `OrExpr : "or" "(" FirstClassType Constant "," FirstClassType Constant ")"	<< astx.NewOrExpr(X[2], X[3], X[5], X[6]) >>`,
		Id:         "OrExpr",
		NTType:     91,
		Index:      218,
		NumSymbols: 8,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewOrExpr(X[2], X[3], X[5], X[6])
		},
	},
	ProdTabEntry{
		String: `XorExpr : "xor" "(" FirstClassType Constant "," FirstClassType Constant ")"	<< astx.NewXorExpr(X[2], X[3], X[5], X[6]) >>`,
		Id:         "XorExpr",
		NTType:     92,
		Index:      219,
		NumSymbols: 8,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewXorExpr(X[2], X[3], X[5], X[6])
		},
	},
	ProdTabEntry{
		String: `ExtractElementExpr : "extractelement" "(" FirstClassType Constant "," FirstClassType Constant ")"	<< astx.NewExtractElementExpr(X[2], X[3], X[5], X[6]) >>`,
		Id:         "ExtractElementExpr",
		NTType:     93,
		Index:      220,
		NumSymbols: 8,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewExtractElementExpr(X[2], X[3], X[5], X[6])
		},
	},
	ProdTabEntry{
		String: `InsertElementExpr : "insertelement" "(" FirstClassType Constant "," FirstClassType Constant "," FirstClassType Constant ")"	<< astx.NewInsertElementExpr(X[2], X[3], X[5], X[6], X[8], X[9]) >>`,
		Id:         "InsertElementExpr",
		NTType:     94,
		Index:      221,
		NumSymbols: 11,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewInsertElementExpr(X[2], X[3], X[5], X[6], X[8], X[9])
		},
	},
	ProdTabEntry{
		String: `ShuffleVectorExpr : "shufflevector" "(" FirstClassType Constant "," FirstClassType Constant "," FirstClassType Constant ")"	<< astx.NewShuffleVectorExpr(X[2], X[3], X[5], X[6], X[8], X[9]) >>`,
		Id:         "ShuffleVectorExpr",
		NTType:     95,
		Index:      222,
		NumSymbols: 11,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewShuffleVectorExpr(X[2], X[3], X[5], X[6], X[8], X[9])
		},
	},
	ProdTabEntry{
		String: `ExtractValueExpr : "extractvalue" "(" FirstClassType Constant "," IntLitList ")"	<< astx.NewExtractValueExpr(X[2], X[3], X[5]) >>`,
		Id:         "ExtractValueExpr",
		NTType:     96,
		Index:      223,
		NumSymbols: 7,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewExtractValueExpr(X[2], X[3], X[5])
		},
	},
	ProdTabEntry{
		String: `InsertValueExpr : "insertvalue" "(" FirstClassType Constant "," FirstClassType Constant "," IntLitList ")"	<< astx.NewInsertValueExpr(X[2], X[3], X[5], X[6], X[8]) >>`,
		Id:         "InsertValueExpr",
		NTType:     97,
		Index:      224,
		NumSymbols: 10,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewInsertValueExpr(X[2], X[3], X[5], X[6], X[8])
		},
	},
	ProdTabEntry{
		String: `GetElementPtrExpr : "getelementptr" OptInbounds "(" FirstClassType "," FirstClassType Constant ConstIndices ")"	<< astx.NewGetElementPtrExpr(X[3], X[5], X[6], X[7]) >>`,
		Id:         "GetElementPtrExpr",
		NTType:     98,
		Index:      225,
		NumSymbols: 9,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewGetElementPtrExpr(X[3], X[5], X[6], X[7])
		},
	},
	ProdTabEntry{
		String: `ConstIndices : empty	<<  >>`,
		Id:         "ConstIndices",
		NTType:     99,
		Index:      226,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `ConstIndices : "," ConstIndexList	<< X[1], nil >>`,
		Id:         "ConstIndices",
		NTType:     99,
		Index:      227,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[1], nil
		},
	},
	ProdTabEntry{
		String: `ConstIndexList : ConstIndex	<< astx.NewConstantList(X[0]) >>`,
		Id:         "ConstIndexList",
		NTType:     100,
		Index:      228,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewConstantList(X[0])
		},
	},
	ProdTabEntry{
		String: `ConstIndexList : ConstIndexList "," ConstIndex	<< astx.AppendConstant(X[0], X[2]) >>`,
		Id:         "ConstIndexList",
		NTType:     100,
		Index:      229,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.AppendConstant(X[0], X[2])
		},
	},
	ProdTabEntry{
		String: `ConstIndex : IntType Constant	<< astx.NewConstant(X[0], X[1]) >>`,
		Id:         "ConstIndex",
		NTType:     101,
		Index:      230,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewConstant(X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `TruncExpr : "trunc" "(" FirstClassType Constant "to" FirstClassType ")"	<< astx.NewTruncExpr(X[2], X[3], X[5]) >>`,
		Id:         "TruncExpr",
		NTType:     102,
		Index:      231,
		NumSymbols: 7,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewTruncExpr(X[2], X[3], X[5])
		},
	},
	ProdTabEntry{
		String: `ZExtExpr : "zext" "(" FirstClassType Constant "to" FirstClassType ")"	<< astx.NewZExtExpr(X[2], X[3], X[5]) >>`,
		Id:         "ZExtExpr",
		NTType:     103,
		Index:      232,
		NumSymbols: 7,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewZExtExpr(X[2], X[3], X[5])
		},
	},
	ProdTabEntry{
		String: `SExtExpr : "sext" "(" FirstClassType Constant "to" FirstClassType ")"	<< astx.NewSExtExpr(X[2], X[3], X[5]) >>`,
		Id:         "SExtExpr",
		NTType:     104,
		Index:      233,
		NumSymbols: 7,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewSExtExpr(X[2], X[3], X[5])
		},
	},
	ProdTabEntry{
		String: `FPTruncExpr : "fptrunc" "(" FirstClassType Constant "to" FirstClassType ")"	<< astx.NewFPTruncExpr(X[2], X[3], X[5]) >>`,
		Id:         "FPTruncExpr",
		NTType:     105,
		Index:      234,
		NumSymbols: 7,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewFPTruncExpr(X[2], X[3], X[5])
		},
	},
	ProdTabEntry{
		String: `FPExtExpr : "fpext" "(" FirstClassType Constant "to" FirstClassType ")"	<< astx.NewFPExtExpr(X[2], X[3], X[5]) >>`,
		Id:         "FPExtExpr",
		NTType:     106,
		Index:      235,
		NumSymbols: 7,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewFPExtExpr(X[2], X[3], X[5])
		},
	},
	ProdTabEntry{
		String: `FPToUIExpr : "fptoui" "(" FirstClassType Constant "to" FirstClassType ")"	<< astx.NewFPToUIExpr(X[2], X[3], X[5]) >>`,
		Id:         "FPToUIExpr",
		NTType:     107,
		Index:      236,
		NumSymbols: 7,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewFPToUIExpr(X[2], X[3], X[5])
		},
	},
	ProdTabEntry{
		String: `FPToSIExpr : "fptosi" "(" FirstClassType Constant "to" FirstClassType ")"	<< astx.NewFPToSIExpr(X[2], X[3], X[5]) >>`,
		Id:         "FPToSIExpr",
		NTType:     108,
		Index:      237,
		NumSymbols: 7,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewFPToSIExpr(X[2], X[3], X[5])
		},
	},
	ProdTabEntry{
		String: `UIToFPExpr : "uitofp" "(" FirstClassType Constant "to" FirstClassType ")"	<< astx.NewUIToFPExpr(X[2], X[3], X[5]) >>`,
		Id:         "UIToFPExpr",
		NTType:     109,
		Index:      238,
		NumSymbols: 7,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewUIToFPExpr(X[2], X[3], X[5])
		},
	},
	ProdTabEntry{
		String: `SIToFPExpr : "sitofp" "(" FirstClassType Constant "to" FirstClassType ")"	<< astx.NewSIToFPExpr(X[2], X[3], X[5]) >>`,
		Id:         "SIToFPExpr",
		NTType:     110,
		Index:      239,
		NumSymbols: 7,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewSIToFPExpr(X[2], X[3], X[5])
		},
	},
	ProdTabEntry{
		String: `PtrToIntExpr : "ptrtoint" "(" FirstClassType Constant "to" FirstClassType ")"	<< astx.NewPtrToIntExpr(X[2], X[3], X[5]) >>`,
		Id:         "PtrToIntExpr",
		NTType:     111,
		Index:      240,
		NumSymbols: 7,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewPtrToIntExpr(X[2], X[3], X[5])
		},
	},
	ProdTabEntry{
		String: `IntToPtrExpr : "inttoptr" "(" FirstClassType Constant "to" FirstClassType ")"	<< astx.NewIntToPtrExpr(X[2], X[3], X[5]) >>`,
		Id:         "IntToPtrExpr",
		NTType:     112,
		Index:      241,
		NumSymbols: 7,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewIntToPtrExpr(X[2], X[3], X[5])
		},
	},
	ProdTabEntry{
		String: `BitCastExpr : "bitcast" "(" FirstClassType Constant "to" FirstClassType ")"	<< astx.NewBitCastExpr(X[2], X[3], X[5]) >>`,
		Id:         "BitCastExpr",
		NTType:     113,
		Index:      242,
		NumSymbols: 7,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewBitCastExpr(X[2], X[3], X[5])
		},
	},
	ProdTabEntry{
		String: `AddrSpaceCastExpr : "addrspacecast" "(" FirstClassType Constant "to" FirstClassType ")"	<< astx.NewAddrSpaceCastExpr(X[2], X[3], X[5]) >>`,
		Id:         "AddrSpaceCastExpr",
		NTType:     114,
		Index:      243,
		NumSymbols: 7,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewAddrSpaceCastExpr(X[2], X[3], X[5])
		},
	},
	ProdTabEntry{
		String: `ICmpExpr : "icmp" IntPred "(" FirstClassType Constant "," FirstClassType Constant ")"	<< astx.NewICmpExpr(X[1], X[3], X[4], X[6], X[7]) >>`,
		Id:         "ICmpExpr",
		NTType:     115,
		Index:      244,
		NumSymbols: 9,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewICmpExpr(X[1], X[3], X[4], X[6], X[7])
		},
	},
	ProdTabEntry{
		String: `FCmpExpr : "fcmp" FloatPred "(" FirstClassType Constant "," FirstClassType Constant ")"	<< astx.NewFCmpExpr(X[1], X[3], X[4], X[6], X[7]) >>`,
		Id:         "FCmpExpr",
		NTType:     116,
		Index:      245,
		NumSymbols: 9,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewFCmpExpr(X[1], X[3], X[4], X[6], X[7])
		},
	},
	ProdTabEntry{
		String: `SelectExpr : "select" "(" FirstClassType Constant "," FirstClassType Constant "," FirstClassType Constant ")"	<< astx.NewSelectExpr(X[2], X[3], X[5], X[6], X[8], X[9]) >>`,
		Id:         "SelectExpr",
		NTType:     117,
		Index:      246,
		NumSymbols: 11,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewSelectExpr(X[2], X[3], X[5], X[6], X[8], X[9])
		},
	},
	ProdTabEntry{
		String: `BasicBlockList : BasicBlock	<< astx.NewBasicBlockList(X[0]) >>`,
		Id:         "BasicBlockList",
		NTType:     118,
		Index:      247,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewBasicBlockList(X[0])
		},
	},
	ProdTabEntry{
		String: `BasicBlockList : BasicBlockList BasicBlock	<< astx.AppendBasicBlock(X[0], X[1]) >>`,
		Id:         "BasicBlockList",
		NTType:     118,
		Index:      248,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.AppendBasicBlock(X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `BasicBlock : OptLabelIdent Instructions Terminator	<< astx.NewBasicBlock(X[0], X[1], X[2]) >>`,
		Id:         "BasicBlock",
		NTType:     119,
		Index:      249,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewBasicBlock(X[0], X[1], X[2])
		},
	},
	ProdTabEntry{
		String: `OptLabelIdent : empty	<<  >>`,
		Id:         "OptLabelIdent",
		NTType:     120,
		Index:      250,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `OptLabelIdent : LabelIdent	<<  >>`,
		Id:         "OptLabelIdent",
		NTType:     120,
		Index:      251,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Instructions : empty	<<  >>`,
		Id:         "Instructions",
		NTType:     121,
		Index:      252,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `Instructions : InstructionList	<<  >>`,
		Id:         "Instructions",
		NTType:     121,
		Index:      253,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `InstructionList : Instruction	<< astx.NewInstructionList(X[0]) >>`,
		Id:         "InstructionList",
		NTType:     122,
		Index:      254,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewInstructionList(X[0])
		},
	},
	ProdTabEntry{
		String: `InstructionList : InstructionList Instruction	<< astx.AppendInstruction(X[0], X[1]) >>`,
		Id:         "InstructionList",
		NTType:     122,
		Index:      255,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.AppendInstruction(X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `Instruction : StoreInst	<<  >>`,
		Id:         "Instruction",
		NTType:     123,
		Index:      256,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Instruction : FenceInst	<<  >>`,
		Id:         "Instruction",
		NTType:     123,
		Index:      257,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Instruction : CmpXchgInst	<<  >>`,
		Id:         "Instruction",
		NTType:     123,
		Index:      258,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Instruction : AtomicRMWInst	<<  >>`,
		Id:         "Instruction",
		NTType:     123,
		Index:      259,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Instruction : LocalIdent "=" ValueInstruction	<< astx.NewNamedInstruction(X[0], X[2]) >>`,
		Id:         "Instruction",
		NTType:     123,
		Index:      260,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewNamedInstruction(X[0], X[2])
		},
	},
	ProdTabEntry{
		String: `Instruction : ValueInstruction	<<  >>`,
		Id:         "Instruction",
		NTType:     123,
		Index:      261,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : AddInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      262,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : FAddInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      263,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : SubInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      264,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : FSubInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      265,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : MulInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      266,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : FMulInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      267,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : UDivInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      268,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : SDivInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      269,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : FDivInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      270,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : URemInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      271,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : SRemInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      272,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : FRemInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      273,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : ShlInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      274,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : LShrInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      275,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : AShrInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      276,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : AndInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      277,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : OrInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      278,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : XorInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      279,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : ExtractElementInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      280,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : InsertElementInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      281,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : ShuffleVectorInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      282,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : ExtractValueInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      283,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : InsertValueInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      284,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : AllocaInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      285,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : LoadInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      286,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : GetElementPtrInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      287,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : TruncInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      288,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : ZExtInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      289,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : SExtInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      290,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : FPTruncInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      291,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : FPExtInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      292,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : FPToUIInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      293,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : FPToSIInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      294,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : UIToFPInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      295,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : SIToFPInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      296,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : PtrToIntInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      297,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : IntToPtrInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      298,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : BitCastInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      299,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : AddrSpaceCastInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      300,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : ICmpInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      301,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : FCmpInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      302,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : PhiInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      303,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : SelectInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      304,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : CallInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      305,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : VAArgInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      306,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : LandingPadInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      307,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : CatchPadInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      308,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInstruction : CleanupPadInst	<<  >>`,
		Id:         "ValueInstruction",
		NTType:     124,
		Index:      309,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `AddInst : "add" OverflowFlags FirstClassType Value "," Value OptCommaAttachedMDList	<< astx.NewAddInst(X[2], X[3], X[5], X[6]) >>`,
		Id:         "AddInst",
		NTType:     125,
		Index:      310,
		NumSymbols: 7,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewAddInst(X[2], X[3], X[5], X[6])
		},
	},
	ProdTabEntry{
		String: `FAddInst : "fadd" FastMathFlags FirstClassType Value "," Value OptCommaAttachedMDList	<< astx.NewFAddInst(X[2], X[3], X[5], X[6]) >>`,
		Id:         "FAddInst",
		NTType:     126,
		Index:      311,
		NumSymbols: 7,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewFAddInst(X[2], X[3], X[5], X[6])
		},
	},
	ProdTabEntry{
		String: `SubInst : "sub" OverflowFlags FirstClassType Value "," Value OptCommaAttachedMDList	<< astx.NewSubInst(X[2], X[3], X[5], X[6]) >>`,
		Id:         "SubInst",
		NTType:     127,
		Index:      312,
		NumSymbols: 7,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewSubInst(X[2], X[3], X[5], X[6])
		},
	},
	ProdTabEntry{
		String: `FSubInst : "fsub" FastMathFlags FirstClassType Value "," Value OptCommaAttachedMDList	<< astx.NewFSubInst(X[2], X[3], X[5], X[6]) >>`,
		Id:         "FSubInst",
		NTType:     128,
		Index:      313,
		NumSymbols: 7,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewFSubInst(X[2], X[3], X[5], X[6])
		},
	},
	ProdTabEntry{
		String: `MulInst : "mul" OverflowFlags FirstClassType Value "," Value OptCommaAttachedMDList	<< astx.NewMulInst(X[2], X[3], X[5], X[6]) >>`,
		Id:         "MulInst",
		NTType:     129,
		Index:      314,
		NumSymbols: 7,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewMulInst(X[2], X[3], X[5], X[6])
		},
	},
	ProdTabEntry{
		String: `FMulInst : "fmul" FastMathFlags FirstClassType Value "," Value OptCommaAttachedMDList	<< astx.NewFMulInst(X[2], X[3], X[5], X[6]) >>`,
		Id:         "FMulInst",
		NTType:     130,
		Index:      315,
		NumSymbols: 7,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewFMulInst(X[2], X[3], X[5], X[6])
		},
	},
	ProdTabEntry{
		String: `UDivInst : "udiv" OptExact FirstClassType Value "," Value OptCommaAttachedMDList	<< astx.NewUDivInst(X[2], X[3], X[5], X[6]) >>`,
		Id:         "UDivInst",
		NTType:     131,
		Index:      316,
		NumSymbols: 7,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewUDivInst(X[2], X[3], X[5], X[6])
		},
	},
	ProdTabEntry{
		String: `SDivInst : "sdiv" OptExact FirstClassType Value "," Value OptCommaAttachedMDList	<< astx.NewSDivInst(X[2], X[3], X[5], X[6]) >>`,
		Id:         "SDivInst",
		NTType:     132,
		Index:      317,
		NumSymbols: 7,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewSDivInst(X[2], X[3], X[5], X[6])
		},
	},
	ProdTabEntry{
		String: `FDivInst : "fdiv" FastMathFlags FirstClassType Value "," Value OptCommaAttachedMDList	<< astx.NewFDivInst(X[2], X[3], X[5], X[6]) >>`,
		Id:         "FDivInst",
		NTType:     133,
		Index:      318,
		NumSymbols: 7,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewFDivInst(X[2], X[3], X[5], X[6])
		},
	},
	ProdTabEntry{
		String: `URemInst : "urem" FirstClassType Value "," Value OptCommaAttachedMDList	<< astx.NewURemInst(X[1], X[2], X[4], X[5]) >>`,
		Id:         "URemInst",
		NTType:     134,
		Index:      319,
		NumSymbols: 6,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewURemInst(X[1], X[2], X[4], X[5])
		},
	},
	ProdTabEntry{
		String: `SRemInst : "srem" FirstClassType Value "," Value OptCommaAttachedMDList	<< astx.NewSRemInst(X[1], X[2], X[4], X[5]) >>`,
		Id:         "SRemInst",
		NTType:     135,
		Index:      320,
		NumSymbols: 6,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewSRemInst(X[1], X[2], X[4], X[5])
		},
	},
	ProdTabEntry{
		String: `FRemInst : "frem" FastMathFlags FirstClassType Value "," Value OptCommaAttachedMDList	<< astx.NewFRemInst(X[2], X[3], X[5], X[6]) >>`,
		Id:         "FRemInst",
		NTType:     136,
		Index:      321,
		NumSymbols: 7,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewFRemInst(X[2], X[3], X[5], X[6])
		},
	},
	ProdTabEntry{
		String: `OverflowFlags : empty	<<  >>`,
		Id:         "OverflowFlags",
		NTType:     137,
		Index:      322,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `OverflowFlags : OverflowFlagList	<<  >>`,
		Id:         "OverflowFlags",
		NTType:     137,
		Index:      323,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `OverflowFlagList : OverflowFlag	<<  >>`,
		Id:         "OverflowFlagList",
		NTType:     138,
		Index:      324,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `OverflowFlagList : OverflowFlagList OverflowFlag	<<  >>`,
		Id:         "OverflowFlagList",
		NTType:     138,
		Index:      325,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `OverflowFlag : "nuw"	<<  >>`,
		Id:         "OverflowFlag",
		NTType:     139,
		Index:      326,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `OverflowFlag : "nsw"	<<  >>`,
		Id:         "OverflowFlag",
		NTType:     139,
		Index:      327,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FastMathFlags : empty	<<  >>`,
		Id:         "FastMathFlags",
		NTType:     140,
		Index:      328,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `FastMathFlags : FastMathFlagList	<<  >>`,
		Id:         "FastMathFlags",
		NTType:     140,
		Index:      329,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FastMathFlagList : FastMathFlag	<<  >>`,
		Id:         "FastMathFlagList",
		NTType:     141,
		Index:      330,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FastMathFlagList : FastMathFlagList FastMathFlag	<<  >>`,
		Id:         "FastMathFlagList",
		NTType:     141,
		Index:      331,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FastMathFlag : "arcp"	<<  >>`,
		Id:         "FastMathFlag",
		NTType:     142,
		Index:      332,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FastMathFlag : "fast"	<<  >>`,
		Id:         "FastMathFlag",
		NTType:     142,
		Index:      333,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FastMathFlag : "ninf"	<<  >>`,
		Id:         "FastMathFlag",
		NTType:     142,
		Index:      334,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FastMathFlag : "nnan"	<<  >>`,
		Id:         "FastMathFlag",
		NTType:     142,
		Index:      335,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FastMathFlag : "nsz"	<<  >>`,
		Id:         "FastMathFlag",
		NTType:     142,
		Index:      336,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `OptExact : empty	<<  >>`,
		Id:         "OptExact",
		NTType:     143,
		Index:      337,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `OptExact : "exact"	<<  >>`,
		Id:         "OptExact",
		NTType:     143,
		Index:      338,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ShlInst : "shl" OverflowFlags FirstClassType Value "," Value OptCommaAttachedMDList	<< astx.NewShlInst(X[2], X[3], X[5], X[6]) >>`,
		Id:         "ShlInst",
		NTType:     144,
		Index:      339,
		NumSymbols: 7,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewShlInst(X[2], X[3], X[5], X[6])
		},
	},
	ProdTabEntry{
		String: `LShrInst : "lshr" OptExact FirstClassType Value "," Value OptCommaAttachedMDList	<< astx.NewLShrInst(X[2], X[3], X[5], X[6]) >>`,
		Id:         "LShrInst",
		NTType:     145,
		Index:      340,
		NumSymbols: 7,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewLShrInst(X[2], X[3], X[5], X[6])
		},
	},
	ProdTabEntry{
		String: `AShrInst : "ashr" OptExact FirstClassType Value "," Value OptCommaAttachedMDList	<< astx.NewAShrInst(X[2], X[3], X[5], X[6]) >>`,
		Id:         "AShrInst",
		NTType:     146,
		Index:      341,
		NumSymbols: 7,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewAShrInst(X[2], X[3], X[5], X[6])
		},
	},
	ProdTabEntry{
		String: `AndInst : "and" FirstClassType Value "," Value OptCommaAttachedMDList	<< astx.NewAndInst(X[1], X[2], X[4], X[5]) >>`,
		Id:         "AndInst",
		NTType:     147,
		Index:      342,
		NumSymbols: 6,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewAndInst(X[1], X[2], X[4], X[5])
		},
	},
	ProdTabEntry{
		String: `OrInst : "or" FirstClassType Value "," Value OptCommaAttachedMDList	<< astx.NewOrInst(X[1], X[2], X[4], X[5]) >>`,
		Id:         "OrInst",
		NTType:     148,
		Index:      343,
		NumSymbols: 6,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewOrInst(X[1], X[2], X[4], X[5])
		},
	},
	ProdTabEntry{
		String: `XorInst : "xor" FirstClassType Value "," Value OptCommaAttachedMDList	<< astx.NewXorInst(X[1], X[2], X[4], X[5]) >>`,
		Id:         "XorInst",
		NTType:     149,
		Index:      344,
		NumSymbols: 6,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewXorInst(X[1], X[2], X[4], X[5])
		},
	},
	ProdTabEntry{
		String: `ExtractElementInst : "extractelement" FirstClassType Value "," FirstClassType Value OptCommaAttachedMDList	<< astx.NewExtractElementInst(X[1], X[2], X[4], X[5], X[6]) >>`,
		Id:         "ExtractElementInst",
		NTType:     150,
		Index:      345,
		NumSymbols: 7,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewExtractElementInst(X[1], X[2], X[4], X[5], X[6])
		},
	},
	ProdTabEntry{
		String: `InsertElementInst : "insertelement" FirstClassType Value "," FirstClassType Value "," FirstClassType Value OptCommaAttachedMDList	<< astx.NewInsertElementInst(X[1], X[2], X[4], X[5], X[7], X[8], X[9]) >>`,
		Id:         "InsertElementInst",
		NTType:     151,
		Index:      346,
		NumSymbols: 10,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewInsertElementInst(X[1], X[2], X[4], X[5], X[7], X[8], X[9])
		},
	},
	ProdTabEntry{
		String: `ShuffleVectorInst : "shufflevector" FirstClassType Value "," FirstClassType Value "," FirstClassType Value OptCommaAttachedMDList	<< astx.NewShuffleVectorInst(X[1], X[2], X[4], X[5], X[7], X[8], X[9]) >>`,
		Id:         "ShuffleVectorInst",
		NTType:     152,
		Index:      347,
		NumSymbols: 10,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewShuffleVectorInst(X[1], X[2], X[4], X[5], X[7], X[8], X[9])
		},
	},
	ProdTabEntry{
		String: `ExtractValueInst : "extractvalue" FirstClassType Value "," IntLitList OptCommaAttachedMDList	<< astx.NewExtractValueInst(X[1], X[2], X[4], X[5]) >>`,
		Id:         "ExtractValueInst",
		NTType:     153,
		Index:      348,
		NumSymbols: 6,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewExtractValueInst(X[1], X[2], X[4], X[5])
		},
	},
	ProdTabEntry{
		String: `IntLitList : IntLit	<< astx.NewIntLitList(X[0]) >>`,
		Id:         "IntLitList",
		NTType:     154,
		Index:      349,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewIntLitList(X[0])
		},
	},
	ProdTabEntry{
		String: `IntLitList : IntLitList "," IntLit	<< astx.AppendIntLit(X[0], X[2]) >>`,
		Id:         "IntLitList",
		NTType:     154,
		Index:      350,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.AppendIntLit(X[0], X[2])
		},
	},
	ProdTabEntry{
		String: `InsertValueInst : "insertvalue" FirstClassType Value "," FirstClassType Value "," IntLitList OptCommaAttachedMDList	<< astx.NewInsertValueInst(X[1], X[2], X[4], X[5], X[7], X[8]) >>`,
		Id:         "InsertValueInst",
		NTType:     155,
		Index:      351,
		NumSymbols: 9,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewInsertValueInst(X[1], X[2], X[4], X[5], X[7], X[8])
		},
	},
	ProdTabEntry{
		String: `AllocaInst : "alloca" FirstClassType OptCommaAttachedMDList	<< astx.NewAllocaInst(X[1], nil, X[2]) >>`,
		Id:         "AllocaInst",
		NTType:     156,
		Index:      352,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewAllocaInst(X[1], nil, X[2])
		},
	},
	ProdTabEntry{
		String: `AllocaInst : "alloca" FirstClassType "," Align OptCommaAttachedMDList	<< astx.NewAllocaInst(X[1], nil, X[4]) >>`,
		Id:         "AllocaInst",
		NTType:     156,
		Index:      353,
		NumSymbols: 5,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewAllocaInst(X[1], nil, X[4])
		},
	},
	ProdTabEntry{
		String: `AllocaInst : "alloca" FirstClassType "," NElems OptCommaAttachedMDList	<< astx.NewAllocaInst(X[1], X[3], X[4]) >>`,
		Id:         "AllocaInst",
		NTType:     156,
		Index:      354,
		NumSymbols: 5,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewAllocaInst(X[1], X[3], X[4])
		},
	},
	ProdTabEntry{
		String: `AllocaInst : "alloca" FirstClassType "," NElems "," Align OptCommaAttachedMDList	<< astx.NewAllocaInst(X[1], X[3], X[6]) >>`,
		Id:         "AllocaInst",
		NTType:     156,
		Index:      355,
		NumSymbols: 7,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewAllocaInst(X[1], X[3], X[6])
		},
	},
	ProdTabEntry{
		String: `NElems : FirstClassType Value	<< astx.NewValue(X[0], X[1]) >>`,
		Id:         "NElems",
		NTType:     157,
		Index:      356,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewValue(X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `LoadInst : "load" OptVolatile FirstClassType "," PointerType Value OptCommaAttachedMDList	<< astx.NewLoadInst(X[2], X[4], X[5], X[6]) >>`,
		Id:         "LoadInst",
		NTType:     158,
		Index:      357,
		NumSymbols: 7,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewLoadInst(X[2], X[4], X[5], X[6])
		},
	},
	ProdTabEntry{
		String: `LoadInst : "load" OptVolatile FirstClassType "," PointerType Value "," Align OptCommaAttachedMDList	<< astx.NewLoadInst(X[2], X[4], X[5], X[8]) >>`,
		Id:         "LoadInst",
		NTType:     158,
		Index:      358,
		NumSymbols: 9,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewLoadInst(X[2], X[4], X[5], X[8])
		},
	},
	ProdTabEntry{
		String: `OptVolatile : empty	<<  >>`,
		Id:         "OptVolatile",
		NTType:     159,
		Index:      359,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `OptVolatile : "volatile"	<<  >>`,
		Id:         "OptVolatile",
		NTType:     159,
		Index:      360,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `StoreInst : "store" OptVolatile FirstClassType Value "," PointerType Value OptCommaAttachedMDList	<< astx.NewStoreInst(X[2], X[3], X[5], X[6], X[7]) >>`,
		Id:         "StoreInst",
		NTType:     160,
		Index:      361,
		NumSymbols: 8,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewStoreInst(X[2], X[3], X[5], X[6], X[7])
		},
	},
	ProdTabEntry{
		String: `StoreInst : "store" OptVolatile FirstClassType Value "," PointerType Value "," Align OptCommaAttachedMDList	<< astx.NewStoreInst(X[2], X[3], X[5], X[6], X[9]) >>`,
		Id:         "StoreInst",
		NTType:     160,
		Index:      362,
		NumSymbols: 10,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewStoreInst(X[2], X[3], X[5], X[6], X[9])
		},
	},
	ProdTabEntry{
		String: `FenceInst : "fence" OptSinglethread Ordering OptCommaAttachedMDList	<< nil, nil >>`,
		Id:         "FenceInst",
		NTType:     161,
		Index:      363,
		NumSymbols: 4,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `OptSinglethread : empty	<<  >>`,
		Id:         "OptSinglethread",
		NTType:     162,
		Index:      364,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `OptSinglethread : "singlethread"	<<  >>`,
		Id:         "OptSinglethread",
		NTType:     162,
		Index:      365,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Ordering : "acq_rel"	<<  >>`,
		Id:         "Ordering",
		NTType:     163,
		Index:      366,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Ordering : "acquire"	<<  >>`,
		Id:         "Ordering",
		NTType:     163,
		Index:      367,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Ordering : "monotonic"	<<  >>`,
		Id:         "Ordering",
		NTType:     163,
		Index:      368,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Ordering : "release"	<<  >>`,
		Id:         "Ordering",
		NTType:     163,
		Index:      369,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Ordering : "seq_cst"	<<  >>`,
		Id:         "Ordering",
		NTType:     163,
		Index:      370,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Ordering : "unordered"	<<  >>`,
		Id:         "Ordering",
		NTType:     163,
		Index:      371,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `CmpXchgInst : "cmpxchg" OptWeak OptVolatile FirstClassType Value "," FirstClassType Value "," FirstClassType Value OptSinglethread Ordering Ordering OptCommaAttachedMDList	<< nil, nil >>`,
		Id:         "CmpXchgInst",
		NTType:     164,
		Index:      372,
		NumSymbols: 15,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `OptWeak : empty	<<  >>`,
		Id:         "OptWeak",
		NTType:     165,
		Index:      373,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `OptWeak : "weak"	<<  >>`,
		Id:         "OptWeak",
		NTType:     165,
		Index:      374,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `AtomicRMWInst : "atomicrmw" OptVolatile AtomicOperation FirstClassType Value "," FirstClassType Value OptSinglethread Ordering OptCommaAttachedMDList	<< nil, nil >>`,
		Id:         "AtomicRMWInst",
		NTType:     166,
		Index:      375,
		NumSymbols: 11,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `AtomicOperation : "add"	<<  >>`,
		Id:         "AtomicOperation",
		NTType:     167,
		Index:      376,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `AtomicOperation : "and"	<<  >>`,
		Id:         "AtomicOperation",
		NTType:     167,
		Index:      377,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `AtomicOperation : "max"	<<  >>`,
		Id:         "AtomicOperation",
		NTType:     167,
		Index:      378,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `AtomicOperation : "min"	<<  >>`,
		Id:         "AtomicOperation",
		NTType:     167,
		Index:      379,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `AtomicOperation : "nand"	<<  >>`,
		Id:         "AtomicOperation",
		NTType:     167,
		Index:      380,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `AtomicOperation : "or"	<<  >>`,
		Id:         "AtomicOperation",
		NTType:     167,
		Index:      381,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `AtomicOperation : "sub"	<<  >>`,
		Id:         "AtomicOperation",
		NTType:     167,
		Index:      382,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `AtomicOperation : "umax"	<<  >>`,
		Id:         "AtomicOperation",
		NTType:     167,
		Index:      383,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `AtomicOperation : "umin"	<<  >>`,
		Id:         "AtomicOperation",
		NTType:     167,
		Index:      384,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `AtomicOperation : "xchg"	<<  >>`,
		Id:         "AtomicOperation",
		NTType:     167,
		Index:      385,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `AtomicOperation : "xor"	<<  >>`,
		Id:         "AtomicOperation",
		NTType:     167,
		Index:      386,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `GetElementPtrInst : "getelementptr" OptInbounds FirstClassType "," FirstClassType Value OptCommaAttachedMDList	<< astx.NewGetElementPtrInst(X[2], X[4], X[5], nil, X[6]) >>`,
		Id:         "GetElementPtrInst",
		NTType:     168,
		Index:      387,
		NumSymbols: 7,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewGetElementPtrInst(X[2], X[4], X[5], nil, X[6])
		},
	},
	ProdTabEntry{
		String: `GetElementPtrInst : "getelementptr" OptInbounds FirstClassType "," FirstClassType Value "," IndexList OptCommaAttachedMDList	<< astx.NewGetElementPtrInst(X[2], X[4], X[5], X[7], X[8]) >>`,
		Id:         "GetElementPtrInst",
		NTType:     168,
		Index:      388,
		NumSymbols: 9,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewGetElementPtrInst(X[2], X[4], X[5], X[7], X[8])
		},
	},
	ProdTabEntry{
		String: `IndexList : Index	<< astx.NewValueList(X[0]) >>`,
		Id:         "IndexList",
		NTType:     169,
		Index:      389,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewValueList(X[0])
		},
	},
	ProdTabEntry{
		String: `IndexList : IndexList "," Index	<< astx.AppendValue(X[0], X[2]) >>`,
		Id:         "IndexList",
		NTType:     169,
		Index:      390,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.AppendValue(X[0], X[2])
		},
	},
	ProdTabEntry{
		String: `Index : IntType Value	<< astx.NewValue(X[0], X[1]) >>`,
		Id:         "Index",
		NTType:     170,
		Index:      391,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewValue(X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `TruncInst : "trunc" FirstClassType Value "to" FirstClassType OptCommaAttachedMDList	<< astx.NewTruncInst(X[1], X[2], X[4], X[5]) >>`,
		Id:         "TruncInst",
		NTType:     171,
		Index:      392,
		NumSymbols: 6,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewTruncInst(X[1], X[2], X[4], X[5])
		},
	},
	ProdTabEntry{
		String: `ZExtInst : "zext" FirstClassType Value "to" FirstClassType OptCommaAttachedMDList	<< astx.NewZExtInst(X[1], X[2], X[4], X[5]) >>`,
		Id:         "ZExtInst",
		NTType:     172,
		Index:      393,
		NumSymbols: 6,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewZExtInst(X[1], X[2], X[4], X[5])
		},
	},
	ProdTabEntry{
		String: `SExtInst : "sext" FirstClassType Value "to" FirstClassType OptCommaAttachedMDList	<< astx.NewSExtInst(X[1], X[2], X[4], X[5]) >>`,
		Id:         "SExtInst",
		NTType:     173,
		Index:      394,
		NumSymbols: 6,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewSExtInst(X[1], X[2], X[4], X[5])
		},
	},
	ProdTabEntry{
		String: `FPTruncInst : "fptrunc" FirstClassType Value "to" FirstClassType OptCommaAttachedMDList	<< astx.NewFPTruncInst(X[1], X[2], X[4], X[5]) >>`,
		Id:         "FPTruncInst",
		NTType:     174,
		Index:      395,
		NumSymbols: 6,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewFPTruncInst(X[1], X[2], X[4], X[5])
		},
	},
	ProdTabEntry{
		String: `FPExtInst : "fpext" FirstClassType Value "to" FirstClassType OptCommaAttachedMDList	<< astx.NewFPExtInst(X[1], X[2], X[4], X[5]) >>`,
		Id:         "FPExtInst",
		NTType:     175,
		Index:      396,
		NumSymbols: 6,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewFPExtInst(X[1], X[2], X[4], X[5])
		},
	},
	ProdTabEntry{
		String: `FPToUIInst : "fptoui" FirstClassType Value "to" FirstClassType OptCommaAttachedMDList	<< astx.NewFPToUIInst(X[1], X[2], X[4], X[5]) >>`,
		Id:         "FPToUIInst",
		NTType:     176,
		Index:      397,
		NumSymbols: 6,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewFPToUIInst(X[1], X[2], X[4], X[5])
		},
	},
	ProdTabEntry{
		String: `FPToSIInst : "fptosi" FirstClassType Value "to" FirstClassType OptCommaAttachedMDList	<< astx.NewFPToSIInst(X[1], X[2], X[4], X[5]) >>`,
		Id:         "FPToSIInst",
		NTType:     177,
		Index:      398,
		NumSymbols: 6,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewFPToSIInst(X[1], X[2], X[4], X[5])
		},
	},
	ProdTabEntry{
		String: `UIToFPInst : "uitofp" FirstClassType Value "to" FirstClassType OptCommaAttachedMDList	<< astx.NewUIToFPInst(X[1], X[2], X[4], X[5]) >>`,
		Id:         "UIToFPInst",
		NTType:     178,
		Index:      399,
		NumSymbols: 6,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewUIToFPInst(X[1], X[2], X[4], X[5])
		},
	},
	ProdTabEntry{
		String: `SIToFPInst : "sitofp" FirstClassType Value "to" FirstClassType OptCommaAttachedMDList	<< astx.NewSIToFPInst(X[1], X[2], X[4], X[5]) >>`,
		Id:         "SIToFPInst",
		NTType:     179,
		Index:      400,
		NumSymbols: 6,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewSIToFPInst(X[1], X[2], X[4], X[5])
		},
	},
	ProdTabEntry{
		String: `PtrToIntInst : "ptrtoint" FirstClassType Value "to" FirstClassType OptCommaAttachedMDList	<< astx.NewPtrToIntInst(X[1], X[2], X[4], X[5]) >>`,
		Id:         "PtrToIntInst",
		NTType:     180,
		Index:      401,
		NumSymbols: 6,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewPtrToIntInst(X[1], X[2], X[4], X[5])
		},
	},
	ProdTabEntry{
		String: `IntToPtrInst : "inttoptr" FirstClassType Value "to" FirstClassType OptCommaAttachedMDList	<< astx.NewIntToPtrInst(X[1], X[2], X[4], X[5]) >>`,
		Id:         "IntToPtrInst",
		NTType:     181,
		Index:      402,
		NumSymbols: 6,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewIntToPtrInst(X[1], X[2], X[4], X[5])
		},
	},
	ProdTabEntry{
		String: `BitCastInst : "bitcast" FirstClassType Value "to" FirstClassType OptCommaAttachedMDList	<< astx.NewBitCastInst(X[1], X[2], X[4], X[5]) >>`,
		Id:         "BitCastInst",
		NTType:     182,
		Index:      403,
		NumSymbols: 6,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewBitCastInst(X[1], X[2], X[4], X[5])
		},
	},
	ProdTabEntry{
		String: `AddrSpaceCastInst : "addrspacecast" FirstClassType Value "to" FirstClassType OptCommaAttachedMDList	<< astx.NewAddrSpaceCastInst(X[1], X[2], X[4], X[5]) >>`,
		Id:         "AddrSpaceCastInst",
		NTType:     183,
		Index:      404,
		NumSymbols: 6,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewAddrSpaceCastInst(X[1], X[2], X[4], X[5])
		},
	},
	ProdTabEntry{
		String: `ICmpInst : "icmp" IntPred FirstClassType Value "," Value OptCommaAttachedMDList	<< astx.NewICmpInst(X[1], X[2], X[3], X[5], X[6]) >>`,
		Id:         "ICmpInst",
		NTType:     184,
		Index:      405,
		NumSymbols: 7,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewICmpInst(X[1], X[2], X[3], X[5], X[6])
		},
	},
	ProdTabEntry{
		String: `IntPred : "eq"	<< ast.IntEQ, nil >>`,
		Id:         "IntPred",
		NTType:     185,
		Index:      406,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.IntEQ, nil
		},
	},
	ProdTabEntry{
		String: `IntPred : "ne"	<< ast.IntNE, nil >>`,
		Id:         "IntPred",
		NTType:     185,
		Index:      407,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.IntNE, nil
		},
	},
	ProdTabEntry{
		String: `IntPred : "ugt"	<< ast.IntUGT, nil >>`,
		Id:         "IntPred",
		NTType:     185,
		Index:      408,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.IntUGT, nil
		},
	},
	ProdTabEntry{
		String: `IntPred : "uge"	<< ast.IntUGE, nil >>`,
		Id:         "IntPred",
		NTType:     185,
		Index:      409,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.IntUGE, nil
		},
	},
	ProdTabEntry{
		String: `IntPred : "ult"	<< ast.IntULT, nil >>`,
		Id:         "IntPred",
		NTType:     185,
		Index:      410,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.IntULT, nil
		},
	},
	ProdTabEntry{
		String: `IntPred : "ule"	<< ast.IntULE, nil >>`,
		Id:         "IntPred",
		NTType:     185,
		Index:      411,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.IntULE, nil
		},
	},
	ProdTabEntry{
		String: `IntPred : "sgt"	<< ast.IntSGT, nil >>`,
		Id:         "IntPred",
		NTType:     185,
		Index:      412,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.IntSGT, nil
		},
	},
	ProdTabEntry{
		String: `IntPred : "sge"	<< ast.IntSGE, nil >>`,
		Id:         "IntPred",
		NTType:     185,
		Index:      413,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.IntSGE, nil
		},
	},
	ProdTabEntry{
		String: `IntPred : "slt"	<< ast.IntSLT, nil >>`,
		Id:         "IntPred",
		NTType:     185,
		Index:      414,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.IntSLT, nil
		},
	},
	ProdTabEntry{
		String: `IntPred : "sle"	<< ast.IntSLE, nil >>`,
		Id:         "IntPred",
		NTType:     185,
		Index:      415,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.IntSLE, nil
		},
	},
	ProdTabEntry{
		String: `FCmpInst : "fcmp" FastMathFlags FloatPred FirstClassType Value "," Value OptCommaAttachedMDList	<< astx.NewFCmpInst(X[2], X[3], X[4], X[6], X[7]) >>`,
		Id:         "FCmpInst",
		NTType:     186,
		Index:      416,
		NumSymbols: 8,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewFCmpInst(X[2], X[3], X[4], X[6], X[7])
		},
	},
	ProdTabEntry{
		String: `FloatPred : "false"	<< ast.FloatFalse, nil >>`,
		Id:         "FloatPred",
		NTType:     187,
		Index:      417,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.FloatFalse, nil
		},
	},
	ProdTabEntry{
		String: `FloatPred : "oeq"	<< ast.FloatOEQ, nil >>`,
		Id:         "FloatPred",
		NTType:     187,
		Index:      418,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.FloatOEQ, nil
		},
	},
	ProdTabEntry{
		String: `FloatPred : "ogt"	<< ast.FloatOGT, nil >>`,
		Id:         "FloatPred",
		NTType:     187,
		Index:      419,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.FloatOGT, nil
		},
	},
	ProdTabEntry{
		String: `FloatPred : "oge"	<< ast.FloatOGE, nil >>`,
		Id:         "FloatPred",
		NTType:     187,
		Index:      420,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.FloatOGE, nil
		},
	},
	ProdTabEntry{
		String: `FloatPred : "olt"	<< ast.FloatOLT, nil >>`,
		Id:         "FloatPred",
		NTType:     187,
		Index:      421,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.FloatOLT, nil
		},
	},
	ProdTabEntry{
		String: `FloatPred : "ole"	<< ast.FloatOLE, nil >>`,
		Id:         "FloatPred",
		NTType:     187,
		Index:      422,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.FloatOLE, nil
		},
	},
	ProdTabEntry{
		String: `FloatPred : "one"	<< ast.FloatONE, nil >>`,
		Id:         "FloatPred",
		NTType:     187,
		Index:      423,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.FloatONE, nil
		},
	},
	ProdTabEntry{
		String: `FloatPred : "ord"	<< ast.FloatORD, nil >>`,
		Id:         "FloatPred",
		NTType:     187,
		Index:      424,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.FloatORD, nil
		},
	},
	ProdTabEntry{
		String: `FloatPred : "ueq"	<< ast.FloatUEQ, nil >>`,
		Id:         "FloatPred",
		NTType:     187,
		Index:      425,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.FloatUEQ, nil
		},
	},
	ProdTabEntry{
		String: `FloatPred : "ugt"	<< ast.FloatUGT, nil >>`,
		Id:         "FloatPred",
		NTType:     187,
		Index:      426,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.FloatUGT, nil
		},
	},
	ProdTabEntry{
		String: `FloatPred : "uge"	<< ast.FloatUGE, nil >>`,
		Id:         "FloatPred",
		NTType:     187,
		Index:      427,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.FloatUGE, nil
		},
	},
	ProdTabEntry{
		String: `FloatPred : "ult"	<< ast.FloatULT, nil >>`,
		Id:         "FloatPred",
		NTType:     187,
		Index:      428,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.FloatULT, nil
		},
	},
	ProdTabEntry{
		String: `FloatPred : "ule"	<< ast.FloatULE, nil >>`,
		Id:         "FloatPred",
		NTType:     187,
		Index:      429,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.FloatULE, nil
		},
	},
	ProdTabEntry{
		String: `FloatPred : "une"	<< ast.FloatUNE, nil >>`,
		Id:         "FloatPred",
		NTType:     187,
		Index:      430,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.FloatUNE, nil
		},
	},
	ProdTabEntry{
		String: `FloatPred : "uno"	<< ast.FloatUNO, nil >>`,
		Id:         "FloatPred",
		NTType:     187,
		Index:      431,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.FloatUNO, nil
		},
	},
	ProdTabEntry{
		String: `FloatPred : "true"	<< ast.FloatTrue, nil >>`,
		Id:         "FloatPred",
		NTType:     187,
		Index:      432,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.FloatTrue, nil
		},
	},
	ProdTabEntry{
		String: `PhiInst : "phi" FirstClassType IncomingList OptCommaAttachedMDList	<< astx.NewPhiInst(X[1], X[2], X[3]) >>`,
		Id:         "PhiInst",
		NTType:     188,
		Index:      433,
		NumSymbols: 4,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewPhiInst(X[1], X[2], X[3])
		},
	},
	ProdTabEntry{
		String: `IncomingList : Incoming	<< astx.NewIncomingList(X[0]) >>`,
		Id:         "IncomingList",
		NTType:     189,
		Index:      434,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewIncomingList(X[0])
		},
	},
	ProdTabEntry{
		String: `IncomingList : IncomingList "," Incoming	<< astx.AppendIncoming(X[0], X[2]) >>`,
		Id:         "IncomingList",
		NTType:     189,
		Index:      435,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.AppendIncoming(X[0], X[2])
		},
	},
	ProdTabEntry{
		String: `Incoming : "[" Value "," LocalIdent "]"	<< astx.NewIncoming(X[1], X[3]) >>`,
		Id:         "Incoming",
		NTType:     190,
		Index:      436,
		NumSymbols: 5,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewIncoming(X[1], X[3])
		},
	},
	ProdTabEntry{
		String: `SelectInst : "select" FirstClassType Value "," FirstClassType Value "," FirstClassType Value OptCommaAttachedMDList	<< astx.NewSelectInst(X[1], X[2], X[4], X[5], X[7], X[8], X[9]) >>`,
		Id:         "SelectInst",
		NTType:     191,
		Index:      437,
		NumSymbols: 10,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewSelectInst(X[1], X[2], X[4], X[5], X[7], X[8], X[9])
		},
	},
	ProdTabEntry{
		String: `CallInst : OptTail "call" FastMathFlags OptCallConv ParamAttrs Type Value "(" Args ")" FuncAttrs OptCommaAttachedMDList	<< astx.NewCallInst(X[3], X[5], X[6], X[8], X[11]) >>`,
		Id:         "CallInst",
		NTType:     192,
		Index:      438,
		NumSymbols: 12,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewCallInst(X[3], X[5], X[6], X[8], X[11])
		},
	},
	ProdTabEntry{
		String: `OptTail : empty	<<  >>`,
		Id:         "OptTail",
		NTType:     193,
		Index:      439,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `OptTail : Tail	<<  >>`,
		Id:         "OptTail",
		NTType:     193,
		Index:      440,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Tail : "tail"	<<  >>`,
		Id:         "Tail",
		NTType:     194,
		Index:      441,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Tail : "musttail"	<<  >>`,
		Id:         "Tail",
		NTType:     194,
		Index:      442,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Tail : "notail"	<<  >>`,
		Id:         "Tail",
		NTType:     194,
		Index:      443,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Args : empty	<<  >>`,
		Id:         "Args",
		NTType:     195,
		Index:      444,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `Args : ArgList	<<  >>`,
		Id:         "Args",
		NTType:     195,
		Index:      445,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ArgList : Arg	<< astx.NewValueList(X[0]) >>`,
		Id:         "ArgList",
		NTType:     196,
		Index:      446,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewValueList(X[0])
		},
	},
	ProdTabEntry{
		String: `ArgList : ArgList "," Arg	<< astx.AppendValue(X[0], X[2]) >>`,
		Id:         "ArgList",
		NTType:     196,
		Index:      447,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.AppendValue(X[0], X[2])
		},
	},
	ProdTabEntry{
		String: `Arg : FirstClassType ParamAttrs Value	<< astx.NewValue(X[0], X[2]) >>`,
		Id:         "Arg",
		NTType:     197,
		Index:      448,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewValue(X[0], X[2])
		},
	},
	ProdTabEntry{
		String: `VAArgInst : "va_arg" FirstClassType Value "," FirstClassType OptCommaAttachedMDList	<< nil, nil >>`,
		Id:         "VAArgInst",
		NTType:     198,
		Index:      449,
		NumSymbols: 6,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `LandingPadInst : "landingpad" FirstClassType ClauseList OptCommaAttachedMDList	<< nil, nil >>`,
		Id:         "LandingPadInst",
		NTType:     199,
		Index:      450,
		NumSymbols: 4,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `LandingPadInst : "landingpad" FirstClassType "cleanup" Clauses OptCommaAttachedMDList	<< nil, nil >>`,
		Id:         "LandingPadInst",
		NTType:     199,
		Index:      451,
		NumSymbols: 5,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `Clauses : empty	<<  >>`,
		Id:         "Clauses",
		NTType:     200,
		Index:      452,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `Clauses : ClauseList	<<  >>`,
		Id:         "Clauses",
		NTType:     200,
		Index:      453,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ClauseList : Clause	<<  >>`,
		Id:         "ClauseList",
		NTType:     201,
		Index:      454,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ClauseList : ClauseList Clause	<<  >>`,
		Id:         "ClauseList",
		NTType:     201,
		Index:      455,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Clause : "catch" FirstClassType Value	<<  >>`,
		Id:         "Clause",
		NTType:     202,
		Index:      456,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Clause : "filter" FirstClassType ArrayConst	<<  >>`,
		Id:         "Clause",
		NTType:     202,
		Index:      457,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `CatchPadInst : "catchpad" "within" LocalIdent ArrayConst OptCommaAttachedMDList	<< nil, nil >>`,
		Id:         "CatchPadInst",
		NTType:     203,
		Index:      458,
		NumSymbols: 5,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `CleanupPadInst : "cleanuppad" "within" ExceptionParent ArrayConst OptCommaAttachedMDList	<< nil, nil >>`,
		Id:         "CleanupPadInst",
		NTType:     204,
		Index:      459,
		NumSymbols: 5,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `ExceptionParent : "none"	<<  >>`,
		Id:         "ExceptionParent",
		NTType:     205,
		Index:      460,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ExceptionParent : LocalIdent	<<  >>`,
		Id:         "ExceptionParent",
		NTType:     205,
		Index:      461,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Terminator : RetTerm	<<  >>`,
		Id:         "Terminator",
		NTType:     206,
		Index:      462,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Terminator : BrTerm	<<  >>`,
		Id:         "Terminator",
		NTType:     206,
		Index:      463,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Terminator : CondBrTerm	<<  >>`,
		Id:         "Terminator",
		NTType:     206,
		Index:      464,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Terminator : SwitchTerm	<<  >>`,
		Id:         "Terminator",
		NTType:     206,
		Index:      465,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Terminator : IndirectBrTerm	<<  >>`,
		Id:         "Terminator",
		NTType:     206,
		Index:      466,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Terminator : InvokeTerm	<<  >>`,
		Id:         "Terminator",
		NTType:     206,
		Index:      467,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Terminator : ResumeTerm	<<  >>`,
		Id:         "Terminator",
		NTType:     206,
		Index:      468,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Terminator : CatchSwitchTerm	<<  >>`,
		Id:         "Terminator",
		NTType:     206,
		Index:      469,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Terminator : CatchRetTerm	<<  >>`,
		Id:         "Terminator",
		NTType:     206,
		Index:      470,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Terminator : CleanupRetTerm	<<  >>`,
		Id:         "Terminator",
		NTType:     206,
		Index:      471,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Terminator : UnreachableTerm	<<  >>`,
		Id:         "Terminator",
		NTType:     206,
		Index:      472,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `RetTerm : "ret" VoidType OptCommaAttachedMDList	<< astx.NewRetTerm(nil, nil, X[2]) >>`,
		Id:         "RetTerm",
		NTType:     207,
		Index:      473,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewRetTerm(nil, nil, X[2])
		},
	},
	ProdTabEntry{
		String: `RetTerm : "ret" FirstClassType Value OptCommaAttachedMDList	<< astx.NewRetTerm(X[1], X[2], X[3]) >>`,
		Id:         "RetTerm",
		NTType:     207,
		Index:      474,
		NumSymbols: 4,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewRetTerm(X[1], X[2], X[3])
		},
	},
	ProdTabEntry{
		String: `BrTerm : "br" LabelType LocalIdent OptCommaAttachedMDList	<< astx.NewBrTerm(X[1], X[2], X[3]) >>`,
		Id:         "BrTerm",
		NTType:     208,
		Index:      475,
		NumSymbols: 4,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewBrTerm(X[1], X[2], X[3])
		},
	},
	ProdTabEntry{
		String: `CondBrTerm : "br" IntType Value "," LabelType LocalIdent "," LabelType LocalIdent OptCommaAttachedMDList	<< astx.NewCondBrTerm(X[1], X[2], X[4], X[5], X[7], X[8], X[9]) >>`,
		Id:         "CondBrTerm",
		NTType:     209,
		Index:      476,
		NumSymbols: 10,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewCondBrTerm(X[1], X[2], X[4], X[5], X[7], X[8], X[9])
		},
	},
	ProdTabEntry{
		String: `SwitchTerm : "switch" IntType Value "," LabelType LocalIdent "[" Cases "]" OptCommaAttachedMDList	<< astx.NewSwitchTerm(X[1], X[2], X[4], X[5], X[7], X[9]) >>`,
		Id:         "SwitchTerm",
		NTType:     210,
		Index:      477,
		NumSymbols: 10,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewSwitchTerm(X[1], X[2], X[4], X[5], X[7], X[9])
		},
	},
	ProdTabEntry{
		String: `Cases : empty	<<  >>`,
		Id:         "Cases",
		NTType:     211,
		Index:      478,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `Cases : CastList	<<  >>`,
		Id:         "Cases",
		NTType:     211,
		Index:      479,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `CastList : Case	<< astx.NewCaseList(X[0]) >>`,
		Id:         "CastList",
		NTType:     212,
		Index:      480,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewCaseList(X[0])
		},
	},
	ProdTabEntry{
		String: `CastList : CastList Case	<< astx.AppendCase(X[0], X[1]) >>`,
		Id:         "CastList",
		NTType:     212,
		Index:      481,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.AppendCase(X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `Case : IntType Value "," LabelType LocalIdent	<< astx.NewCase(X[0], X[1], X[3], X[4]) >>`,
		Id:         "Case",
		NTType:     213,
		Index:      482,
		NumSymbols: 5,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewCase(X[0], X[1], X[3], X[4])
		},
	},
	ProdTabEntry{
		String: `IndirectBrTerm : "indirectbr" FirstClassType Value "," "[" Labels "]" OptCommaAttachedMDList	<< nil, nil >>`,
		Id:         "IndirectBrTerm",
		NTType:     214,
		Index:      483,
		NumSymbols: 8,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `InvokeTerm : "invoke" OptCallConv ParamAttrs Type Value "(" Args ")" FuncAttrs OptOperandBundle "to" LabelType LocalIdent "unwind" LabelType LocalIdent OptCommaAttachedMDList	<< nil, nil >>`,
		Id:         "InvokeTerm",
		NTType:     215,
		Index:      484,
		NumSymbols: 17,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `OptOperandBundle : empty	<<  >>`,
		Id:         "OptOperandBundle",
		NTType:     216,
		Index:      485,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `OptOperandBundle : OperandBundle	<<  >>`,
		Id:         "OptOperandBundle",
		NTType:     216,
		Index:      486,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `OperandBundle : "[" TagValues "]"	<<  >>`,
		Id:         "OperandBundle",
		NTType:     217,
		Index:      487,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `TagValues : empty	<<  >>`,
		Id:         "TagValues",
		NTType:     218,
		Index:      488,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `TagValues : TagValueList	<<  >>`,
		Id:         "TagValues",
		NTType:     218,
		Index:      489,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `TagValueList : TagValue	<<  >>`,
		Id:         "TagValueList",
		NTType:     219,
		Index:      490,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `TagValueList : TagValueList "," TagValue	<<  >>`,
		Id:         "TagValueList",
		NTType:     219,
		Index:      491,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `TagValue : string_lit "(" Values ")"	<<  >>`,
		Id:         "TagValue",
		NTType:     220,
		Index:      492,
		NumSymbols: 4,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Values : empty	<<  >>`,
		Id:         "Values",
		NTType:     221,
		Index:      493,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `Values : ValueList	<<  >>`,
		Id:         "Values",
		NTType:     221,
		Index:      494,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueList : FirstClassType Value	<<  >>`,
		Id:         "ValueList",
		NTType:     222,
		Index:      495,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueList : ValueList "," FirstClassType Value	<<  >>`,
		Id:         "ValueList",
		NTType:     222,
		Index:      496,
		NumSymbols: 4,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ResumeTerm : "resume" FirstClassType Value OptCommaAttachedMDList	<< nil, nil >>`,
		Id:         "ResumeTerm",
		NTType:     223,
		Index:      497,
		NumSymbols: 4,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `CatchSwitchTerm : "catchswitch" "within" ExceptionParent "[" Labels "]" "unwind" "to" "caller" OptCommaAttachedMDList	<< nil, nil >>`,
		Id:         "CatchSwitchTerm",
		NTType:     224,
		Index:      498,
		NumSymbols: 10,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `CatchSwitchTerm : "catchswitch" "within" ExceptionParent "[" Labels "]" "unwind" LabelType LocalIdent OptCommaAttachedMDList	<< nil, nil >>`,
		Id:         "CatchSwitchTerm",
		NTType:     224,
		Index:      499,
		NumSymbols: 10,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `CatchRetTerm : "catchret" "from" Value "to" LabelType LocalIdent OptCommaAttachedMDList	<< nil, nil >>`,
		Id:         "CatchRetTerm",
		NTType:     225,
		Index:      500,
		NumSymbols: 7,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `CleanupRetTerm : "cleanupret" "from" Value "unwind" "to" "caller" OptCommaAttachedMDList	<< nil, nil >>`,
		Id:         "CleanupRetTerm",
		NTType:     226,
		Index:      501,
		NumSymbols: 7,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `CleanupRetTerm : "cleanupret" "from" Value "unwind" LabelType LocalIdent OptCommaAttachedMDList	<< nil, nil >>`,
		Id:         "CleanupRetTerm",
		NTType:     226,
		Index:      502,
		NumSymbols: 7,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `UnreachableTerm : "unreachable" OptCommaAttachedMDList	<< astx.NewUnreachableTerm(X[1]) >>`,
		Id:         "UnreachableTerm",
		NTType:     227,
		Index:      503,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewUnreachableTerm(X[1])
		},
	},
	ProdTabEntry{
		String: `OptLinkage : empty	<<  >>`,
		Id:         "OptLinkage",
		NTType:     228,
		Index:      504,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `OptLinkage : Linkage	<<  >>`,
		Id:         "OptLinkage",
		NTType:     228,
		Index:      505,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Linkage : "appending"	<<  >>`,
		Id:         "Linkage",
		NTType:     229,
		Index:      506,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Linkage : "available_externally"	<<  >>`,
		Id:         "Linkage",
		NTType:     229,
		Index:      507,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Linkage : "common"	<<  >>`,
		Id:         "Linkage",
		NTType:     229,
		Index:      508,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Linkage : "internal"	<<  >>`,
		Id:         "Linkage",
		NTType:     229,
		Index:      509,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Linkage : "linkonce"	<<  >>`,
		Id:         "Linkage",
		NTType:     229,
		Index:      510,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Linkage : "linkonce_odr"	<<  >>`,
		Id:         "Linkage",
		NTType:     229,
		Index:      511,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Linkage : "private"	<<  >>`,
		Id:         "Linkage",
		NTType:     229,
		Index:      512,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Linkage : "weak"	<<  >>`,
		Id:         "Linkage",
		NTType:     229,
		Index:      513,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Linkage : "weak_odr"	<<  >>`,
		Id:         "Linkage",
		NTType:     229,
		Index:      514,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `OptExternLinkage : empty	<<  >>`,
		Id:         "OptExternLinkage",
		NTType:     230,
		Index:      515,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `OptExternLinkage : ExternLinkage	<<  >>`,
		Id:         "OptExternLinkage",
		NTType:     230,
		Index:      516,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ExternLinkage : "extern_weak"	<<  >>`,
		Id:         "ExternLinkage",
		NTType:     231,
		Index:      517,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ExternLinkage : "external"	<<  >>`,
		Id:         "ExternLinkage",
		NTType:     231,
		Index:      518,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `OptVisibility : empty	<<  >>`,
		Id:         "OptVisibility",
		NTType:     232,
		Index:      519,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `OptVisibility : Visibility	<<  >>`,
		Id:         "OptVisibility",
		NTType:     232,
		Index:      520,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Visibility : "default"	<<  >>`,
		Id:         "Visibility",
		NTType:     233,
		Index:      521,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Visibility : "hidden"	<<  >>`,
		Id:         "Visibility",
		NTType:     233,
		Index:      522,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Visibility : "protected"	<<  >>`,
		Id:         "Visibility",
		NTType:     233,
		Index:      523,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `OptDLLStorageClass : empty	<<  >>`,
		Id:         "OptDLLStorageClass",
		NTType:     234,
		Index:      524,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `OptDLLStorageClass : DLLStorageClass	<<  >>`,
		Id:         "OptDLLStorageClass",
		NTType:     234,
		Index:      525,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `DLLStorageClass : "dllimport"	<<  >>`,
		Id:         "DLLStorageClass",
		NTType:     235,
		Index:      526,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `DLLStorageClass : "dllexport"	<<  >>`,
		Id:         "DLLStorageClass",
		NTType:     235,
		Index:      527,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `OptThreadLocal : empty	<<  >>`,
		Id:         "OptThreadLocal",
		NTType:     236,
		Index:      528,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `OptThreadLocal : ThreadLocal	<<  >>`,
		Id:         "OptThreadLocal",
		NTType:     236,
		Index:      529,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ThreadLocal : "thread_local"	<<  >>`,
		Id:         "ThreadLocal",
		NTType:     237,
		Index:      530,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ThreadLocal : "thread_local" "(" TLSModel ")"	<<  >>`,
		Id:         "ThreadLocal",
		NTType:     237,
		Index:      531,
		NumSymbols: 4,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `TLSModel : "localdynamic"	<<  >>`,
		Id:         "TLSModel",
		NTType:     238,
		Index:      532,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `TLSModel : "initialexec"	<<  >>`,
		Id:         "TLSModel",
		NTType:     238,
		Index:      533,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `TLSModel : "localexec"	<<  >>`,
		Id:         "TLSModel",
		NTType:     238,
		Index:      534,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `OptUnnamedAddr : empty	<<  >>`,
		Id:         "OptUnnamedAddr",
		NTType:     239,
		Index:      535,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `OptUnnamedAddr : UnnamedAddr	<<  >>`,
		Id:         "OptUnnamedAddr",
		NTType:     239,
		Index:      536,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `UnnamedAddr : "local_unnamed_addr"	<<  >>`,
		Id:         "UnnamedAddr",
		NTType:     240,
		Index:      537,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `UnnamedAddr : "unnamed_addr"	<<  >>`,
		Id:         "UnnamedAddr",
		NTType:     240,
		Index:      538,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `OptSection : empty	<<  >>`,
		Id:         "OptSection",
		NTType:     241,
		Index:      539,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `OptSection : Section	<<  >>`,
		Id:         "OptSection",
		NTType:     241,
		Index:      540,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Section : "section" string_lit	<<  >>`,
		Id:         "Section",
		NTType:     242,
		Index:      541,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `OptComdat : empty	<<  >>`,
		Id:         "OptComdat",
		NTType:     243,
		Index:      542,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `OptComdat : Comdat	<<  >>`,
		Id:         "OptComdat",
		NTType:     243,
		Index:      543,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Comdat : "comdat"	<<  >>`,
		Id:         "Comdat",
		NTType:     244,
		Index:      544,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Comdat : "comdat" "(" ComdatName ")"	<<  >>`,
		Id:         "Comdat",
		NTType:     244,
		Index:      545,
		NumSymbols: 4,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `OptAlign : empty	<<  >>`,
		Id:         "OptAlign",
		NTType:     245,
		Index:      546,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `OptAlign : Align	<<  >>`,
		Id:         "OptAlign",
		NTType:     245,
		Index:      547,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Align : "align" IntLit	<<  >>`,
		Id:         "Align",
		NTType:     246,
		Index:      548,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `OptGC : empty	<<  >>`,
		Id:         "OptGC",
		NTType:     247,
		Index:      549,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `OptGC : GC	<<  >>`,
		Id:         "OptGC",
		NTType:     247,
		Index:      550,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `GC : "gc" string_lit	<<  >>`,
		Id:         "GC",
		NTType:     248,
		Index:      551,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `OptPrefix : empty	<<  >>`,
		Id:         "OptPrefix",
		NTType:     249,
		Index:      552,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `OptPrefix : Prefix	<<  >>`,
		Id:         "OptPrefix",
		NTType:     249,
		Index:      553,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Prefix : "prefix" FirstClassType Constant	<<  >>`,
		Id:         "Prefix",
		NTType:     250,
		Index:      554,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `OptPrologue : empty	<<  >>`,
		Id:         "OptPrologue",
		NTType:     251,
		Index:      555,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `OptPrologue : Prologue	<<  >>`,
		Id:         "OptPrologue",
		NTType:     251,
		Index:      556,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Prologue : "prologue" FirstClassType Constant	<<  >>`,
		Id:         "Prologue",
		NTType:     252,
		Index:      557,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `OptPersonality : empty	<<  >>`,
		Id:         "OptPersonality",
		NTType:     253,
		Index:      558,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `OptPersonality : Personality	<<  >>`,
		Id:         "OptPersonality",
		NTType:     253,
		Index:      559,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Personality : "personality" FirstClassType Constant	<<  >>`,
		Id:         "Personality",
		NTType:     254,
		Index:      560,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ParamAttrs : empty	<<  >>`,
		Id:         "ParamAttrs",
		NTType:     255,
		Index:      561,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `ParamAttrs : ParamAttrList	<<  >>`,
		Id:         "ParamAttrs",
		NTType:     255,
		Index:      562,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ParamAttrList : ParamAttr	<<  >>`,
		Id:         "ParamAttrList",
		NTType:     256,
		Index:      563,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ParamAttrList : ParamAttrList ParamAttr	<<  >>`,
		Id:         "ParamAttrList",
		NTType:     256,
		Index:      564,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ParamAttr : string_lit	<<  >>`,
		Id:         "ParamAttr",
		NTType:     257,
		Index:      565,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ParamAttr : string_lit "=" string_lit	<<  >>`,
		Id:         "ParamAttr",
		NTType:     257,
		Index:      566,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ParamAttr : Align	<<  >>`,
		Id:         "ParamAttr",
		NTType:     257,
		Index:      567,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ParamAttr : "byval"	<<  >>`,
		Id:         "ParamAttr",
		NTType:     257,
		Index:      568,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ParamAttr : "dereferenceable" "(" IntLit ")"	<<  >>`,
		Id:         "ParamAttr",
		NTType:     257,
		Index:      569,
		NumSymbols: 4,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ParamAttr : "dereferenceable_or_null" "(" IntLit ")"	<<  >>`,
		Id:         "ParamAttr",
		NTType:     257,
		Index:      570,
		NumSymbols: 4,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ParamAttr : "inalloca"	<<  >>`,
		Id:         "ParamAttr",
		NTType:     257,
		Index:      571,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ParamAttr : "inreg"	<<  >>`,
		Id:         "ParamAttr",
		NTType:     257,
		Index:      572,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ParamAttr : "nest"	<<  >>`,
		Id:         "ParamAttr",
		NTType:     257,
		Index:      573,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ParamAttr : "noalias"	<<  >>`,
		Id:         "ParamAttr",
		NTType:     257,
		Index:      574,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ParamAttr : "nocapture"	<<  >>`,
		Id:         "ParamAttr",
		NTType:     257,
		Index:      575,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ParamAttr : "nonnull"	<<  >>`,
		Id:         "ParamAttr",
		NTType:     257,
		Index:      576,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ParamAttr : "readnone"	<<  >>`,
		Id:         "ParamAttr",
		NTType:     257,
		Index:      577,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ParamAttr : "readonly"	<<  >>`,
		Id:         "ParamAttr",
		NTType:     257,
		Index:      578,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ParamAttr : "returned"	<<  >>`,
		Id:         "ParamAttr",
		NTType:     257,
		Index:      579,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ParamAttr : "signext"	<<  >>`,
		Id:         "ParamAttr",
		NTType:     257,
		Index:      580,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ParamAttr : "sret"	<<  >>`,
		Id:         "ParamAttr",
		NTType:     257,
		Index:      581,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ParamAttr : "swifterror"	<<  >>`,
		Id:         "ParamAttr",
		NTType:     257,
		Index:      582,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ParamAttr : "swiftself"	<<  >>`,
		Id:         "ParamAttr",
		NTType:     257,
		Index:      583,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ParamAttr : "writeonly"	<<  >>`,
		Id:         "ParamAttr",
		NTType:     257,
		Index:      584,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ParamAttr : "zeroext"	<<  >>`,
		Id:         "ParamAttr",
		NTType:     257,
		Index:      585,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncAttrs : empty	<<  >>`,
		Id:         "FuncAttrs",
		NTType:     258,
		Index:      586,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `FuncAttrs : FuncAttrList	<<  >>`,
		Id:         "FuncAttrs",
		NTType:     258,
		Index:      587,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncAttrList : FuncAttr	<<  >>`,
		Id:         "FuncAttrList",
		NTType:     259,
		Index:      588,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncAttrList : FuncAttrList FuncAttr	<<  >>`,
		Id:         "FuncAttrList",
		NTType:     259,
		Index:      589,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncAttr : string_lit	<<  >>`,
		Id:         "FuncAttr",
		NTType:     260,
		Index:      590,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncAttr : string_lit "=" string_lit	<<  >>`,
		Id:         "FuncAttr",
		NTType:     260,
		Index:      591,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncAttr : AttrGroupID	<<  >>`,
		Id:         "FuncAttr",
		NTType:     260,
		Index:      592,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncAttr : "alignstack" "=" IntLit	<<  >>`,
		Id:         "FuncAttr",
		NTType:     260,
		Index:      593,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncAttr : "alignstack" "(" IntLit ")"	<<  >>`,
		Id:         "FuncAttr",
		NTType:     260,
		Index:      594,
		NumSymbols: 4,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncAttr : "allocsize" "(" IntLit ")"	<<  >>`,
		Id:         "FuncAttr",
		NTType:     260,
		Index:      595,
		NumSymbols: 4,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncAttr : "allocsize" "(" IntLit "," IntLit ")"	<<  >>`,
		Id:         "FuncAttr",
		NTType:     260,
		Index:      596,
		NumSymbols: 6,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncAttr : "alwaysinline"	<<  >>`,
		Id:         "FuncAttr",
		NTType:     260,
		Index:      597,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncAttr : "argmemonly"	<<  >>`,
		Id:         "FuncAttr",
		NTType:     260,
		Index:      598,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncAttr : "builtin"	<<  >>`,
		Id:         "FuncAttr",
		NTType:     260,
		Index:      599,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncAttr : "cold"	<<  >>`,
		Id:         "FuncAttr",
		NTType:     260,
		Index:      600,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncAttr : "convergent"	<<  >>`,
		Id:         "FuncAttr",
		NTType:     260,
		Index:      601,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncAttr : "inaccessiblemem_or_argmemonly"	<<  >>`,
		Id:         "FuncAttr",
		NTType:     260,
		Index:      602,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncAttr : "inaccessiblememonly"	<<  >>`,
		Id:         "FuncAttr",
		NTType:     260,
		Index:      603,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncAttr : "inlinehint"	<<  >>`,
		Id:         "FuncAttr",
		NTType:     260,
		Index:      604,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncAttr : "jumptable"	<<  >>`,
		Id:         "FuncAttr",
		NTType:     260,
		Index:      605,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncAttr : "minsize"	<<  >>`,
		Id:         "FuncAttr",
		NTType:     260,
		Index:      606,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncAttr : "naked"	<<  >>`,
		Id:         "FuncAttr",
		NTType:     260,
		Index:      607,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncAttr : "nobuiltin"	<<  >>`,
		Id:         "FuncAttr",
		NTType:     260,
		Index:      608,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncAttr : "noduplicate"	<<  >>`,
		Id:         "FuncAttr",
		NTType:     260,
		Index:      609,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncAttr : "noimplicitfloat"	<<  >>`,
		Id:         "FuncAttr",
		NTType:     260,
		Index:      610,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncAttr : "noinline"	<<  >>`,
		Id:         "FuncAttr",
		NTType:     260,
		Index:      611,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncAttr : "nonlazybind"	<<  >>`,
		Id:         "FuncAttr",
		NTType:     260,
		Index:      612,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncAttr : "norecurse"	<<  >>`,
		Id:         "FuncAttr",
		NTType:     260,
		Index:      613,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncAttr : "noredzone"	<<  >>`,
		Id:         "FuncAttr",
		NTType:     260,
		Index:      614,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncAttr : "noreturn"	<<  >>`,
		Id:         "FuncAttr",
		NTType:     260,
		Index:      615,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncAttr : "nounwind"	<<  >>`,
		Id:         "FuncAttr",
		NTType:     260,
		Index:      616,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncAttr : "optnone"	<<  >>`,
		Id:         "FuncAttr",
		NTType:     260,
		Index:      617,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncAttr : "optsize"	<<  >>`,
		Id:         "FuncAttr",
		NTType:     260,
		Index:      618,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncAttr : "readnone"	<<  >>`,
		Id:         "FuncAttr",
		NTType:     260,
		Index:      619,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncAttr : "readonly"	<<  >>`,
		Id:         "FuncAttr",
		NTType:     260,
		Index:      620,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncAttr : "returns_twice"	<<  >>`,
		Id:         "FuncAttr",
		NTType:     260,
		Index:      621,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncAttr : "safestack"	<<  >>`,
		Id:         "FuncAttr",
		NTType:     260,
		Index:      622,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncAttr : "sanitize_address"	<<  >>`,
		Id:         "FuncAttr",
		NTType:     260,
		Index:      623,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncAttr : "sanitize_memory"	<<  >>`,
		Id:         "FuncAttr",
		NTType:     260,
		Index:      624,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncAttr : "sanitize_thread"	<<  >>`,
		Id:         "FuncAttr",
		NTType:     260,
		Index:      625,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncAttr : "ssp"	<<  >>`,
		Id:         "FuncAttr",
		NTType:     260,
		Index:      626,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncAttr : "sspreq"	<<  >>`,
		Id:         "FuncAttr",
		NTType:     260,
		Index:      627,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncAttr : "sspstrong"	<<  >>`,
		Id:         "FuncAttr",
		NTType:     260,
		Index:      628,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncAttr : "uwtable"	<<  >>`,
		Id:         "FuncAttr",
		NTType:     260,
		Index:      629,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncAttr : "writeonly"	<<  >>`,
		Id:         "FuncAttr",
		NTType:     260,
		Index:      630,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Elems : empty	<<  >>`,
		Id:         "Elems",
		NTType:     261,
		Index:      631,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `Elems : ElemList	<<  >>`,
		Id:         "Elems",
		NTType:     261,
		Index:      632,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ElemList : Elem	<< astx.NewConstantList(X[0]) >>`,
		Id:         "ElemList",
		NTType:     262,
		Index:      633,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewConstantList(X[0])
		},
	},
	ProdTabEntry{
		String: `ElemList : ElemList "," Elem	<< astx.AppendConstant(X[0], X[2]) >>`,
		Id:         "ElemList",
		NTType:     262,
		Index:      634,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.AppendConstant(X[0], X[2])
		},
	},
	ProdTabEntry{
		String: `Elem : FirstClassType Value	<< astx.NewConstant(X[0], X[1]) >>`,
		Id:         "Elem",
		NTType:     263,
		Index:      635,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewConstant(X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `OptCallConv : empty	<< ast.CallConvNone, nil >>`,
		Id:         "OptCallConv",
		NTType:     264,
		Index:      636,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.CallConvNone, nil
		},
	},
	ProdTabEntry{
		String: `OptCallConv : CallConv	<<  >>`,
		Id:         "OptCallConv",
		NTType:     264,
		Index:      637,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `CallConv : "amdgpu_cs"	<< ast.CallConvAMDGPU_CS, nil >>`,
		Id:         "CallConv",
		NTType:     265,
		Index:      638,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.CallConvAMDGPU_CS, nil
		},
	},
	ProdTabEntry{
		String: `CallConv : "amdgpu_gs"	<< ast.CallConvAMDGPU_GS, nil >>`,
		Id:         "CallConv",
		NTType:     265,
		Index:      639,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.CallConvAMDGPU_GS, nil
		},
	},
	ProdTabEntry{
		String: `CallConv : "amdgpu_kernel"	<< ast.CallConvAMDGPU_Kernel, nil >>`,
		Id:         "CallConv",
		NTType:     265,
		Index:      640,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.CallConvAMDGPU_Kernel, nil
		},
	},
	ProdTabEntry{
		String: `CallConv : "amdgpu_ps"	<< ast.CallConvAMDGPU_PS, nil >>`,
		Id:         "CallConv",
		NTType:     265,
		Index:      641,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.CallConvAMDGPU_PS, nil
		},
	},
	ProdTabEntry{
		String: `CallConv : "amdgpu_vs"	<< ast.CallConvAMDGPU_VS, nil >>`,
		Id:         "CallConv",
		NTType:     265,
		Index:      642,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.CallConvAMDGPU_VS, nil
		},
	},
	ProdTabEntry{
		String: `CallConv : "anyregcc"	<< ast.CallConvAnyReg, nil >>`,
		Id:         "CallConv",
		NTType:     265,
		Index:      643,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.CallConvAnyReg, nil
		},
	},
	ProdTabEntry{
		String: `CallConv : "arm_aapcs_vfpcc"	<< ast.CallConvARM_AAPCS_VFP, nil >>`,
		Id:         "CallConv",
		NTType:     265,
		Index:      644,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.CallConvARM_AAPCS_VFP, nil
		},
	},
	ProdTabEntry{
		String: `CallConv : "arm_aapcscc"	<< ast.CallConvARM_AAPCS, nil >>`,
		Id:         "CallConv",
		NTType:     265,
		Index:      645,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.CallConvARM_AAPCS, nil
		},
	},
	ProdTabEntry{
		String: `CallConv : "arm_apcscc"	<< ast.CallConvARM_APCS, nil >>`,
		Id:         "CallConv",
		NTType:     265,
		Index:      646,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.CallConvARM_APCS, nil
		},
	},
	ProdTabEntry{
		String: `CallConv : "avr_intrcc"	<< ast.CallConvAVR_Intr, nil >>`,
		Id:         "CallConv",
		NTType:     265,
		Index:      647,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.CallConvAVR_Intr, nil
		},
	},
	ProdTabEntry{
		String: `CallConv : "avr_signalcc"	<< ast.CallConvAVR_Signal, nil >>`,
		Id:         "CallConv",
		NTType:     265,
		Index:      648,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.CallConvAVR_Signal, nil
		},
	},
	ProdTabEntry{
		String: `CallConv : "cc" IntLit	<< astx.NewCallConv(X[1]) >>`,
		Id:         "CallConv",
		NTType:     265,
		Index:      649,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewCallConv(X[1])
		},
	},
	ProdTabEntry{
		String: `CallConv : "ccc"	<< ast.CallConvC, nil >>`,
		Id:         "CallConv",
		NTType:     265,
		Index:      650,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.CallConvC, nil
		},
	},
	ProdTabEntry{
		String: `CallConv : "coldcc"	<< ast.CallConvCold, nil >>`,
		Id:         "CallConv",
		NTType:     265,
		Index:      651,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.CallConvCold, nil
		},
	},
	ProdTabEntry{
		String: `CallConv : "cxx_fast_tlscc"	<< ast.CallConvCXX_Fast_TLS, nil >>`,
		Id:         "CallConv",
		NTType:     265,
		Index:      652,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.CallConvCXX_Fast_TLS, nil
		},
	},
	ProdTabEntry{
		String: `CallConv : "fastcc"	<< ast.CallConvFast, nil >>`,
		Id:         "CallConv",
		NTType:     265,
		Index:      653,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.CallConvFast, nil
		},
	},
	ProdTabEntry{
		String: `CallConv : "ghccc"	<< ast.CallConvGHC, nil >>`,
		Id:         "CallConv",
		NTType:     265,
		Index:      654,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.CallConvGHC, nil
		},
	},
	ProdTabEntry{
		String: `CallConv : "hhvm_ccc"	<< ast.CallConvHHVM_C, nil >>`,
		Id:         "CallConv",
		NTType:     265,
		Index:      655,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.CallConvHHVM_C, nil
		},
	},
	ProdTabEntry{
		String: `CallConv : "hhvmcc"	<< ast.CallConvHHVM, nil >>`,
		Id:         "CallConv",
		NTType:     265,
		Index:      656,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.CallConvHHVM, nil
		},
	},
	ProdTabEntry{
		String: `CallConv : "intel_ocl_bicc"	<< ast.CallConvIntel_OCL_BI, nil >>`,
		Id:         "CallConv",
		NTType:     265,
		Index:      657,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.CallConvIntel_OCL_BI, nil
		},
	},
	ProdTabEntry{
		String: `CallConv : "msp430_intrcc"	<< ast.CallConvMSP430_Intr, nil >>`,
		Id:         "CallConv",
		NTType:     265,
		Index:      658,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.CallConvMSP430_Intr, nil
		},
	},
	ProdTabEntry{
		String: `CallConv : "preserve_allcc"	<< ast.CallConvPreserveAll, nil >>`,
		Id:         "CallConv",
		NTType:     265,
		Index:      659,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.CallConvPreserveAll, nil
		},
	},
	ProdTabEntry{
		String: `CallConv : "preserve_mostcc"	<< ast.CallConvPreserveMost, nil >>`,
		Id:         "CallConv",
		NTType:     265,
		Index:      660,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.CallConvPreserveMost, nil
		},
	},
	ProdTabEntry{
		String: `CallConv : "ptx_device"	<< ast.CallConvPTX_Device, nil >>`,
		Id:         "CallConv",
		NTType:     265,
		Index:      661,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.CallConvPTX_Device, nil
		},
	},
	ProdTabEntry{
		String: `CallConv : "ptx_kernel"	<< ast.CallConvPTX_Kernel, nil >>`,
		Id:         "CallConv",
		NTType:     265,
		Index:      662,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.CallConvPTX_Kernel, nil
		},
	},
	ProdTabEntry{
		String: `CallConv : "spir_func"	<< ast.CallConvSPIR_Func, nil >>`,
		Id:         "CallConv",
		NTType:     265,
		Index:      663,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.CallConvSPIR_Func, nil
		},
	},
	ProdTabEntry{
		String: `CallConv : "spir_kernel"	<< ast.CallConvSPIR_Kernel, nil >>`,
		Id:         "CallConv",
		NTType:     265,
		Index:      664,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.CallConvSPIR_Kernel, nil
		},
	},
	ProdTabEntry{
		String: `CallConv : "swiftcc"	<< ast.CallConvSwift, nil >>`,
		Id:         "CallConv",
		NTType:     265,
		Index:      665,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.CallConvSwift, nil
		},
	},
	ProdTabEntry{
		String: `CallConv : "webkit_jscc"	<< ast.CallConvWebKit_JS, nil >>`,
		Id:         "CallConv",
		NTType:     265,
		Index:      666,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.CallConvWebKit_JS, nil
		},
	},
	ProdTabEntry{
		String: `CallConv : "x86_64_sysvcc"	<< ast.CallConvX86_64_SysV, nil >>`,
		Id:         "CallConv",
		NTType:     265,
		Index:      667,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.CallConvX86_64_SysV, nil
		},
	},
	ProdTabEntry{
		String: `CallConv : "x86_64_win64cc"	<< ast.CallConvX86_64_Win64, nil >>`,
		Id:         "CallConv",
		NTType:     265,
		Index:      668,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.CallConvX86_64_Win64, nil
		},
	},
	ProdTabEntry{
		String: `CallConv : "x86_fastcallcc"	<< ast.CallConvX86_FastCall, nil >>`,
		Id:         "CallConv",
		NTType:     265,
		Index:      669,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.CallConvX86_FastCall, nil
		},
	},
	ProdTabEntry{
		String: `CallConv : "x86_intrcc"	<< ast.CallConvX86_Intr, nil >>`,
		Id:         "CallConv",
		NTType:     265,
		Index:      670,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.CallConvX86_Intr, nil
		},
	},
	ProdTabEntry{
		String: `CallConv : "x86_regcallcc"	<< ast.CallConvX86_RegCall, nil >>`,
		Id:         "CallConv",
		NTType:     265,
		Index:      671,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.CallConvX86_RegCall, nil
		},
	},
	ProdTabEntry{
		String: `CallConv : "x86_stdcallcc"	<< ast.CallConvX86_StdCall, nil >>`,
		Id:         "CallConv",
		NTType:     265,
		Index:      672,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.CallConvX86_StdCall, nil
		},
	},
	ProdTabEntry{
		String: `CallConv : "x86_thiscallcc"	<< ast.CallConvX86_ThisCall, nil >>`,
		Id:         "CallConv",
		NTType:     265,
		Index:      673,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.CallConvX86_ThisCall, nil
		},
	},
	ProdTabEntry{
		String: `CallConv : "x86_vectorcallcc"	<< ast.CallConvX86_VectorCall, nil >>`,
		Id:         "CallConv",
		NTType:     265,
		Index:      674,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return ast.CallConvX86_VectorCall, nil
		},
	},
	ProdTabEntry{
		String: `Labels : empty	<<  >>`,
		Id:         "Labels",
		NTType:     266,
		Index:      675,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `Labels : LabelList	<<  >>`,
		Id:         "Labels",
		NTType:     266,
		Index:      676,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `LabelList : Label	<<  >>`,
		Id:         "LabelList",
		NTType:     267,
		Index:      677,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `LabelList : LabelList "," Label	<<  >>`,
		Id:         "LabelList",
		NTType:     267,
		Index:      678,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Label : LabelType LocalIdent	<<  >>`,
		Id:         "Label",
		NTType:     268,
		Index:      679,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `OptInbounds : empty	<<  >>`,
		Id:         "OptInbounds",
		NTType:     269,
		Index:      680,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `OptInbounds : "inbounds"	<<  >>`,
		Id:         "OptInbounds",
		NTType:     269,
		Index:      681,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `AttachedMDs : empty	<<  >>`,
		Id:         "AttachedMDs",
		NTType:     270,
		Index:      682,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `AttachedMDs : AttachedMDList	<<  >>`,
		Id:         "AttachedMDs",
		NTType:     270,
		Index:      683,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `AttachedMDList : AttachedMD	<< astx.NewAttachedMDList(X[0]) >>`,
		Id:         "AttachedMDList",
		NTType:     271,
		Index:      684,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewAttachedMDList(X[0])
		},
	},
	ProdTabEntry{
		String: `AttachedMDList : AttachedMDList AttachedMD	<< astx.AppendAttachedMD(X[0], X[1]) >>`,
		Id:         "AttachedMDList",
		NTType:     271,
		Index:      685,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.AppendAttachedMD(X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `AttachedMD : MetadataName MD	<< astx.NewAttachedMD(X[0], X[1]) >>`,
		Id:         "AttachedMD",
		NTType:     272,
		Index:      686,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewAttachedMD(X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `MD : Metadata	<<  >>`,
		Id:         "MD",
		NTType:     273,
		Index:      687,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `MD : MetadataID	<<  >>`,
		Id:         "MD",
		NTType:     273,
		Index:      688,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `OptCommaAttachedMDList : empty	<<  >>`,
		Id:         "OptCommaAttachedMDList",
		NTType:     274,
		Index:      689,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `OptCommaAttachedMDList : CommaAttachedMDList	<<  >>`,
		Id:         "OptCommaAttachedMDList",
		NTType:     274,
		Index:      690,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `CommaAttachedMDList : "," AttachedMD	<< astx.NewAttachedMDList(X[1]) >>`,
		Id:         "CommaAttachedMDList",
		NTType:     275,
		Index:      691,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.NewAttachedMDList(X[1])
		},
	},
	ProdTabEntry{
		String: `CommaAttachedMDList : CommaAttachedMDList "," AttachedMD	<< astx.AppendAttachedMD(X[0], X[2]) >>`,
		Id:         "CommaAttachedMDList",
		NTType:     275,
		Index:      692,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return astx.AppendAttachedMD(X[0], X[2])
		},
	},
}
