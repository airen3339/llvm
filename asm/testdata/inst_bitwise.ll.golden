define i32 @shl_1() {
; <label>:0
	%result = shl i32 21, 1
	ret i32 %result
}

define <2 x i32> @shl_2() {
; <label>:0
	%result = shl <2 x i32> <i32 21, i32 42>, <i32 1, i32 0>
	ret <2 x i32> %result
}

define i32 @shl_3() {
; <label>:0
	%result = shl i32 21, 1
	ret i32 %result
}

define i32 @shl_4() {
; <label>:0
	%result = shl i32 21, 1, !baz !{!"qux"}, !foo !{!"bar"}
	ret i32 %result
}

define i32 @lshr_1() {
; <label>:0
	%result = lshr i32 84, 1
	ret i32 %result
}

define <2 x i32> @lshr_2() {
; <label>:0
	%result = lshr <2 x i32> <i32 84, i32 42>, <i32 1, i32 0>
	ret <2 x i32> %result
}

define i32 @lshr_3() {
; <label>:0
	%result = lshr i32 84, 1
	ret i32 %result
}

define i32 @lshr_4() {
; <label>:0
	%result = lshr i32 84, 1, !baz !{!"qux"}, !foo !{!"bar"}
	ret i32 %result
}

define i32 @ashr_1() {
; <label>:0
	%result = ashr i32 84, 1
	ret i32 %result
}

define <2 x i32> @ashr_2() {
; <label>:0
	%result = ashr <2 x i32> <i32 84, i32 42>, <i32 1, i32 0>
	ret <2 x i32> %result
}

define i32 @ashr_3() {
; <label>:0
	%result = ashr i32 84, 1
	ret i32 %result
}

define i32 @ashr_4() {
; <label>:0
	%result = ashr i32 84, 1, !baz !{!"qux"}, !foo !{!"bar"}
	ret i32 %result
}

define i32 @ashr_5() {
; <label>:0
	%result = ashr i32 -84, 1
	ret i32 %result
}

define i32 @and_1() {
; <label>:0
	%result = and i32 58, 239
	ret i32 %result
}

define <2 x i32> @and_2() {
; <label>:0
	%result = and <2 x i32> <i32 58, i32 170>, <i32 239, i32 127>
	ret <2 x i32> %result
}

define i32 @and_3() {
; <label>:0
	%result = and i32 58, 239, !baz !{!"qux"}, !foo !{!"bar"}
	ret i32 %result
}

define i32 @or_1() {
; <label>:0
	%result = or i32 10, 32
	ret i32 %result
}

define <2 x i32> @or_2() {
; <label>:0
	%result = or <2 x i32> <i32 10, i32 40>, <i32 32, i32 2>
	ret <2 x i32> %result
}

define i32 @or_3() {
; <label>:0
	%result = or i32 10, 32, !baz !{!"qux"}, !foo !{!"bar"}
	ret i32 %result
}

define i32 @xor_1() {
; <label>:0
	%result = xor i32 255, 213
	ret i32 %result
}

define <2 x i32> @xor_2() {
; <label>:0
	%result = xor <2 x i32> <i32 255, i32 123>, <i32 213, i32 81>
	ret <2 x i32> %result
}

define i32 @xor_3() {
; <label>:0
	%result = xor i32 255, 213, !baz !{!"qux"}, !foo !{!"bar"}
	ret i32 %result
}
